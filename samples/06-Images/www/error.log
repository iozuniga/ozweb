--------------------------------------------------------------------------------
status: 200
Content-type: text/html
Set-Cookie: session=a7f6beb22ab8996d1c22f8c3674917fe9520c5af; Path=/; SameSite=lax; Max-Age=3600
--------------------------------------------------------------------------------
<!DOCTYPE html>

<html lang="en">

<head>
  <title>Images</title>
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <meta http-equiv="Content-Type" content="text/html;charset=UTF-8">
</head>
<body>
  <img src="https://www.Oz Software/wp/wp-content/uploads/2019/12/header-fondo-blanco.jpg"><br>
  <a href="https://www.Oz Software">Oz Software</a><br>
  <a href="https://www.Oz Software/wp/en/xailer-order/?item=per">
    <img src="https://www.Oz Software/wp/wp-content/uploads/2019/12/free-170.png">
</a><br>
  <img alt="banner loaded from resources" src="data:image/png;base64, ">

  <script>
    const xw_docName  = "wdocmain";
    var xw_mapProp  = new Map(); 
    var xw_mapEvent = new Map(); 
    var xw_mapPost  = new Map(); 
    function xw_setHbData(element, hbData, value, post = false) {
       if (post) {
          if (xw_mapPost.has(element.id)) {
             xw_mapPost.get(element.id)[hbData.toLowerCase()] = value;
          } else {
             xw_mapPost.set(element.id, {});
             xw_mapPost.get(element.id)[hbData.toLowerCase()] = value;
          }
       } else {
          xw_mapProp.get(element.id)[hbData.toLowerCase()] = value;
       }
    }
    function xw_baseUri() {
       return window.location.href.split('.cgi')[0] + '.cgi';
    }
    function xw_idVisible( cId, lShow ) {
       const ele = document.getElementById(cId);
       if (ele) {
          if (typeof lShow === "undefined") {
             lShow = ele.hidden;
             }
          ele.hidden = !lShow;
       }
    }
    function xw_getCookie(name) {
       let matches = document.cookie.match(new RegExp(
       "(?:^|; )" + name.replace(/([\.$?*|{}\(\)\[\]\\\/\+^])/g, '\\$1') + "=([^;]*)"));
       return matches ? decodeURIComponent(matches[1]) : undefined;
    }
    function xw_setCookie(name, value, options = {}) {
      if (value.length > 1024 ) {
        console.warn( "excessive size for cookie " + name );
        return false
      }
      if (options.expires instanceof Date) {
        options.expires = options.expires.toUTCString();
      }
      let updatedCookie = encodeURIComponent(name) + "=" + encodeURIComponent(value);
      for (let optionKey in options) {
        updatedCookie += "; " + optionKey;
        let optionValue = options[optionKey];
        if (optionValue !== true) {
          updatedCookie += "=" + optionValue;
        }
      }
      document.cookie = updatedCookie;
      return true;
    }
    function xw_deleteCookie(name) {
       xw_setCookie(name, "", {'max-age': -1});
    }
    function xw_submit(e) {
       let ele = document.getElementById( e.target.name );
       if (ele) {
          xw_setCookie("session", xw_getCookie("session"), {'max-age': 60});
          xw_saveState();
          xw_saveSession();
          xw_savePost(e.target.name);
       }
       return true;
    }
    function xw_routeEvent(el, name, ev ) {
       const id = (el ? el.id : 0);
       const e = {"id":id,
                  "isTrusted":ev.isTrusted,
                  "altKey":ev.altKey,
                  "ctrlKey":ev.ctrlKey,
                  "clientX":ev.clientX,
                  "clientY":ev.clientY}
       xw_setCookie("event", JSON.stringify(e), {'max-age': 60});
       xw_setCookie("session", xw_getCookie("session"), {'max-age': 60});
       xw_saveState();
       xw_saveSession();
       xw_savePost();
       const d = (el ? el.dataset.document : xw_docName);
       window.location = xw_baseUri() + "?action=" + d + "-" + name;
    }
    function xw_saveState() {
       let s = {};
       for (const [id, obj] of xw_mapProp) {
          for(const[key, val] of Object.entries(obj)) {
             const ele = document.getElementById( id );
             const nam = key.substring(1);
             const typ = typeof ele[nam];
             if (typ !== "undefined") {
               if (typ === "string" && ele[nam].length > 512) {
                 obj[key] = null;
               } else {
                 obj[key] = ele[nam];
               }
             }
          }
          s[id] = obj;
       }
       console.log(s);
       xw_setCookie("state", JSON.stringify(s), {'max-age': 60});
    }
    function xw_saveSession() {
       let s = {};
       for (const [id, obj] of xw_mapProp) {
          let nob = {};
          let ele = document.getElementById(id);
          for(const[key, val] of Object.entries(obj)) {
             if (val == null) {
                nob[key] = ele[key];
             }
          }
          if (Object.keys(nob).length > 0) {
             s[id] = nob;
          }
       }
       if (Object.keys(s).length > 0) {
          sessionStorage.setItem( encodeURIComponent(window.location), JSON.stringify(s) );
       }
       else {
          sessionStorage.removeItem( encodeURIComponent(window.location));
       }
    }
    function xw_savePost(id) {
       if (xw_mapPost.size === 0) {
          return false;
       }
       let form = document.getElementById(id);
       if (form) {
          let input;
          for (const [id, obj] of xw_mapPost) {
             for(const[key, val] of Object.entries(obj)) {
                if (val !== null) {
                   input = document.createElement('input');
                   input.setAttribute('name', id + '--' + key);
                   input.setAttribute('value', val);
                   input.setAttribute('type', 'hidden');
                   form.appendChild(input);
                }
             }
          }
       } else {
          form = document.createElement('form');
          form.method = "POST";
          let input;
          for (const [id, obj] of xw_mapPost) {
             for(const[key, val] of Object.entries(obj)) {
                if (val !== null) {
                   input = document.createElement('input');
                   input.setAttribute('name', id + '@' + key);
                   input.setAttribute('value', val);
                   input.setAttribute('type', 'hidden');
                   form.appendChild(input);
                }
             }
          }
          document.body.appendChild(form);
          form.addEventListener("submit", function(e){e.preventDefault();});
          form.submit();
       }
       return true;
    }
    function xw_stateValue(id, name) {
       return xw_mapProp.get(id)[name];
    }
    function xw_restoreSession() {
       const j = sessionStorage.getItem( encodeURIComponent(window.location) );
       if (j) {
          let s = JSON.parse(j);
          for (const [id, obj] of s) {
             const ele = document.getElementById( id );
             if (ele) {
                for (const[key, val] of Object.entries(obj)) {
                   ele[key] = val;
                }
             }
          }
       }
    }
    async function xw_fetch( targetId, sourceId, cb, url, options ) {
       const el = document.getElementById(targetId);
       const or = document.getElementById(sourceId);
       let tp = options.headers['Content-type'];
       let dt = null;
       let re = null;
       if (cb) {
          try {
             if (typeof eval(cb) !== "function") {
                console.warn(`function ${cb} not found.`);
                return;
             }
          } catch (exception) {
             console.warn(`Function ${cb} not found.`);
             return;
          }
       }
       if (or) {
          or.disabled = true;
       }
       try {
          re = await fetch(url, options);
          if (re.ok) {
             if (re.status != 200) {
                tp = "application/javascript";
             }
             try {
                switch(tp) {
                case "application/json":
                   dt = await re.json();
                   break;
                case "text/plain":
                case "application/javascript":
                   dt = await re.text();
                   break;
                case "multipart/form-data":
                case "application/x-www-form-urlencoded":
                   dt = await re.formData();
                   break;
                case "application/octet-stream":
                   dt = await re.blob();
                   break;
                default:
                   dt = await re.text();
                }
             } catch (exception) {
                console.warn(exception);
                dt = null;
             }
          }
       } catch (exception) {
          console.warn(exception);
          re = null;
       }
       if (or) {
          or.disabled = false;
       }
       if (dt) {
          if ( tp === "application/javascript" ) {
             if (re.status === 200) {
                let s = document.createElement('script');
                s.text = dt;
                const node = document.getElementsByTagName('head')[0].appendChild(s);
                node.remove();
             } else {
                console.warn( dt );
             }
          } else {
             if (cb ) {
                eval(cb)(el,dt);
             } else {
               console.warn('Call-back function empty');
             }
          }
       }
    }
    xw_deleteCookie("event");
    xw_deleteCookie("state");
    for (const [key, obj] of xw_mapEvent) {
       for(const[eve, val] of Object.entries(obj)) {
          const ele = document.getElementById( key );
          if ( !ele )  {
             continue;
          }
          if (val.startsWith('@')) {
             ele.addEventListener(`${eve}`.substring(2), function(e) {
                xw_routeEvent(ele, val.substring(1), e);
          });
          }
          else {
             try {
                if (typeof eval(`${val}`) === "function") {
                   ele.addEventListener(`${eve}`.substring(2), eval(`${val}`));
                }
             } catch (exception) {
                console.warn(exception);
             }
          }
       }
    }
  </script>
</body>
</html>

Execute time in milliseconds:          0