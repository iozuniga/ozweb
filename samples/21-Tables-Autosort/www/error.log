--------------------------------------------------------------------------------
status: 200
Content-type: text/html
Set-Cookie: session=668b6be3fe8752f1742555557c73eb04d8ef4726; Path=/; SameSite=strict; Max-Age=3600
--------------------------------------------------------------------------------
<!DOCTYPE html>

<html lang="en">

<head>
  <title>Tables responsive</title>
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <meta http-equiv="Content-type" content="text/html;charset=UTF-8">
  <style>
  #table1 th {
    background-color:blue;
    border: none;
    }
  #table1 thead {
    position:sticky;
    inset-block-start: 0;
    }
  #table1 tfoot {
    position:sticky;
    inset-block-end: 0;
    }
  #table1 tr {
    scroll-snap-align: start;
    }
  #table1 td {
    border: none;
    }
  </style>
  <link rel="stylesheet" href="https://unpkg.com/simpledotcss/simple.min.css">

  <style>
    td, th {
      border: none;
      text-align: start;
      padding: .5rem;
      font-size: 0.9rem;
      }
    .table-filterable tr:nth-child(even) {
      background-color: initial;
      }
    .table-filterable tbody tr {
      border-bottom: 1px solid #333333;
      }
    table {
      margin: 0;
      }
  </style>
  <style>
    .table-sortable th {
      cursor: pointer;
      }
    .table-sortable .th-sort-asc::after {
      content: "\25b4";
      }
    .table-sortable .th-sort-desc::after {
      content: "\25be";
      }
    .table-sortable .th-sort-asc::after,
    .table-sortable .th-sort-desc::after {
      margin-left: 5px;
      }
    .table-sortable .th-sort-asc,
    .table-sortable .th-sort-desc {
      background: rgba(0, 0, 0, 0.1);
      }
  </style>
</head>
<body style="grid-template-columns: 1fr min(145rem, 90%) 1fr;">
  <h2>Sorteable table</h2>
  <div style="height:600px;overflow-y:auto;scroll-snap-type:y mandatory;width:100%;">
    <table id="table1" class="table-sortable" style="width:100%;">
      <thead>
        <tr>
          <th>First</th>
          <th>Last</th>
          <th>Street</th>
          <th>City</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td>ROBIN</td>
          <td>LAFORTUNE</td>
          <td>23974 NORTH REDGUM</td>
          <td>CHOCTAW</td>
        </tr>
        <tr>
          <td>TARTAGLIA</td>
          <td>DODSON</td>
          <td>18883 SOUTHWEST 12TH AVENUE</td>
          <td>DELTA</td>
        </tr>
        <tr>
          <td>PETER</td>
          <td>FRITZ</td>
          <td>13645 GROSVENOR HALL</td>
          <td>MESA</td>
        </tr>
        <tr>
          <td>FRED</td>
          <td>HILTON</td>
          <td>3196 SOUTH BLACKHAWK AVE</td>
          <td>CHATTANOOGA</td>
        </tr>
        <tr>
          <td>MAJOLA</td>
          <td>MONTANARI</td>
          <td>20481 GRAND AVENUE</td>
          <td>FOUNTAIN VALLEY</td>
        </tr>
        <tr>
          <td>ARNALDO</td>
          <td>CARNEY</td>
          <td>1692 BUFFALO AVE</td>
          <td>COLUMBUS</td>
        </tr>
        <tr>
          <td>MARGURETHA</td>
          <td>WOODWARD</td>
          <td>29099 BOX 303</td>
          <td>NORTH ANDOVER</td>
        </tr>
        <tr>
          <td>LOU</td>
          <td>STUBBS</td>
          <td>23232 BAMBRIDGE STREET</td>
          <td>OTTSVILLE</td>
        </tr>
        <tr>
          <td>DAVE</td>
          <td>GOTSMAN</td>
          <td>17960 VANDEVEN COURT</td>
          <td>LAVERNE</td>
        </tr>
        <tr>
          <td>OVED</td>
          <td>IRWIN</td>
          <td>22152 AVON PLACE</td>
          <td>SUNNYVALE</td>
        </tr>
        <tr>
          <td>BOHDAN</td>
          <td>SAAD</td>
          <td>22528 BEAUREGARD STREET</td>
          <td>SPRINGFIELD</td>
        </tr>
        <tr>
          <td>ALI</td>
          <td>HAAN</td>
          <td>19830 INDUSTRIAL DRIVE</td>
          <td>SAN FRANCISCO</td>
        </tr>
        <tr>
          <td>LAM</td>
          <td>BICKLEY</td>
          <td>2283 PIONCIANA</td>
          <td>MONTVILLE</td>
        </tr>
        <tr>
          <td>VINCENT</td>
          <td>BECKERMAN</td>
          <td>24596 EXCHANGE PLACE</td>
          <td>TORONTO</td>
        </tr>
        <tr>
          <td>LENORE</td>
          <td>JOCHUM</td>
          <td>143 CANANDAIGUA ROAD</td>
          <td>MONTGOMERY</td>
        </tr>
        <tr>
          <td>GUNTHER</td>
          <td>BLAKE</td>
          <td>21339 CLARKS HILL</td>
          <td>LAKELAND</td>
        </tr>
        <tr>
          <td>ARTHUR</td>
          <td>QUINN</td>
          <td>21900 BOXWOOD LANE</td>
          <td>LAFAYETTE</td>
        </tr>
        <tr>
          <td>LUCIAN</td>
          <td>KELLEY</td>
          <td>23633 SW MARTIN DOWNS BLVD</td>
          <td>FORT MILL</td>
        </tr>
        <tr>
          <td>BECKY</td>
          <td>COLEMAN</td>
          <td>29884 NORTH WEST 66TH ST</td>
          <td>ANN ARBOR</td>
        </tr>
        <tr>
          <td>REG</td>
          <td>HONG</td>
          <td>1010 MELROSE AVENUE</td>
          <td>LISLE</td>
        </tr>
        <tr>
          <td>LANCE</td>
          <td>THOMSON</td>
          <td>2740 LAWRENCE AVE WEST</td>
          <td>VACAVILLE</td>
        </tr>
        <tr>
          <td>DARRELL</td>
          <td>HUSSAIN</td>
          <td>1875 WHIPPLE AVE NW</td>
          <td>BELTSVILLE</td>
        </tr>
        <tr>
          <td>WESLEY</td>
          <td>GOTSMAL</td>
          <td>29583 E LINCOLN</td>
          <td>JERSEY CITY</td>
        </tr>
        <tr>
          <td>FRANK</td>
          <td>DEARRY</td>
          <td>22530 FOREST DRIVE</td>
          <td>WOODBRIDGE</td>
        </tr>
        <tr>
          <td>PHILIPPE</td>
          <td>PEZZANI</td>
          <td>29933 LAURIE LANE</td>
          <td>BALTIMORE</td>
        </tr>
        <tr>
          <td>RANDALL</td>
          <td>BREMAN</td>
          <td>8369 SOKOLOV STREET</td>
          <td>SOUTH ELGIN</td>
        </tr>
        <tr>
          <td>TROY</td>
          <td>CAIN</td>
          <td>17976 UNIVERSITY AVENUE</td>
          <td>SPRINGFIELD</td>
        </tr>
        <tr>
          <td>BERNHARD</td>
          <td>HALEY</td>
          <td>29203 CARMENITA ROAD</td>
          <td>TALLAHASSE</td>
        </tr>
        <tr>
          <td>BRUNO</td>
          <td>WILSON</td>
          <td>11047 KNOLLSIDE LANE</td>
          <td>VICTORIA</td>
        </tr>
        <tr>
          <td>SUZANNE</td>
          <td>GALVEZ</td>
          <td>31751 FOCHT AVENUE</td>
          <td>LAKELAND</td>
        </tr>
        <tr>
          <td>NICK</td>
          <td>JONES</td>
          <td>9349 BELLMORE</td>
          <td>ALLENTOWN</td>
        </tr>
        <tr>
          <td>TREVOR</td>
          <td>RUSSEL</td>
          <td>30453 CAROLINA AVENUE</td>
          <td>STEVENS POINT</td>
        </tr>
        <tr>
          <td>BEHZAD</td>
          <td>STOOPS</td>
          <td>31540 HUNNEWELL STREET</td>
          <td>GLENDALE</td>
        </tr>
        <tr>
          <td>CLESSON</td>
          <td>FISHER</td>
          <td>8567 SHERMAN WAY</td>
          <td>LAVERNE</td>
        </tr>
        <tr>
          <td>LENORE</td>
          <td>COTTERILL</td>
          <td>10605 SOUTH UNIVERSITY</td>
          <td>ORLAND PARK</td>
        </tr>
        <tr>
          <td>BYRON</td>
          <td>DOWD</td>
          <td>30266 RENE LEVESQUE WEST</td>
          <td>FORT COLLINS</td>
        </tr>
        <tr>
          <td>DAVID</td>
          <td>ZEAL</td>
          <td>26187 COHEN STREET</td>
          <td>CHATTANOOGA</td>
        </tr>
        <tr>
          <td>JACKIE</td>
          <td>BECKERMAN</td>
          <td>32292 DEVONSHIRA DRIVE</td>
          <td>ORANGE</td>
        </tr>
      </tbody>
    </table>
  </div>
  <hr>
  <textarea rows="40" cols="100" readonly id="source">I2luY2x1ZGUgIlhhaWxlcldlYi5jaCINCg0KQ0xBU1MgV0RvY01haW4gRlJPTSBXRG9jDQoNCiAgIE1FVEhPRCBDcmVhdGVEb2MoKQ0KDQpFTkQgQ0xBU1MNCg0KTUVUSE9EIENyZWF0ZURvYygpIENMQVNTIFdEb2NNYWluDQoNCiAgIExPQ0FMIGFEYXRhLCBhSGVhZGVyDQogICBMT0NBTCBjQ29kZSwgY0pzDQoNCiAgIFdTaW1wbGVDb250ZXh0KCk6TmV3KCBTZWxmICkNCg0KLy8gICBXSVRIIE9CSkVDVCBXQmFzaWNDb250ZXh0KCk6TmV3KCBTZWxmICkNCi8vICAgICAgOmNUaGVtZSA6PSAibGlnaHQiDQovLyAgIEVORCBXSVRIDQoNCiAgICNpZmRlZiBfTElOVVhfDQogICAgICBFbmdpbmU6Y0xvZ0ZpbGUgOj0gIi9tbnQvYy94YWlsZXJ3ZWIvc2FtcGxlcy8yMS1UYWJsZXMtQXV0b3NvcnQvZXJyb3IubG9nIg0KICAgI2VuZGlmDQoNCiAgIEVuZ2luZTpsRGVidWcgOj0gLnQuDQoNCiAgIFRFWFQgSU5UTyBjSnMNCiAgIHRhID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoInNvdXJjZSIpOw0KICAgaWYgKHRhKSB7DQogICAgICB0YS52YWx1ZSA9IHh3X2I2NHRvVW5pY29kZSh0YS52YWx1ZSk7DQogICB9DQogICBkZWxldGUgdGE7DQogICBFTkRURVhUDQoNCiAgIDo6b0JvZHk6QWRkU3R5bGUoICJncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmciBtaW4oMTQ1cmVtLCA5MCUpIDFmcjsiICkNCg0KICAgOjpBZGRTY3JpcHQoIGNKcyApOmxEZWZlciA6PSAuVC4NCg0KICAgQ3VzdG9tZXJzKCBAYURhdGEsIEBhSGVhZGVyLCA0ICApDQoNCiAgIEVDSE8gIjxoMj5Tb3J0ZWFibGUgdGFibGU8L2gyPiIgSU5UTyBTZWxmDQoNCiAgIFdJVEggT0JKRUNUIFdUYWJsZSgpOk5ldyggU2VsZiApDQogICAgICA6Y0lkIDo9ICJ0YWJsZTEiDQogICAgICA6Y1dpZHRoIDo9ICIxMDAlIg0KICAgICAgOmNNYXhIZWlnaHQgOj0gIjYwMHB4Ig0KICAgICAgOmNIZWFkZXJCa0NvbG9yIDo9ICJibHVlIg0KICAgICAgOkxvYWREYXRhKCBhSGVhZGVyICkNCiAgICAgIDpMb2FkRGF0YSggYURhdGEgKQ0KICAgICAgOm5IZWFkZXIgOj0gMQ0KICAgICAgLy86bFJlc3BvbnNpdmUgOj0gLlQuDQogICAgICA6bENhblNvcnQgOj0gLnQuDQogICBFTkQgV0lUSA0KDQogICBGSUxFICJEb2NNYWluLnByZyIgSU5UTyBjQ29kZQ0KDQogICBFQ0hPICI8aHI+IiBJTlRPIFNlbGYNCg0KICAgV0lUSCBPQkpFQ1QgV1RleHRBcmVhKCk6TmV3KCBTZWxmICkNCiAgICAgIDpuQ29scyA6PSAxMDANCiAgICAgIDpjSWQgICA6PSAic291cmNlIg0KICAgICAgOm5Sb3dzIDo9IDQwDQogICAgICA6Y1RleHQgOj0gSEJfQmFzZTY0RW5jb2RlKCBjQ29kZSApDQogICAgICA6bFJlYWRPbmx5IDo9IC50Lg0KICAgICAgOkNyZWF0ZSgpDQogICBFTkQgV0lUSA0KDQpSRVRVUk4gbmlsDQoNCi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tDQoNCg0KU1RBVElDIEZVTkNUSU9OIEN1c3RvbWVycyggYURhdGEsIGFIZWFkZXIsIG5Db2xzICkNCg0KICAgTE9DQUwgY0RhdGEsIGhEYXRhLCBoUmVjLCBhUmVjLCB4VmFsdWUNCg0KICAgVEVYVCBJTlRPIGNEYXRhDQogICB7DQogICAgICJDVVNUT01FUiI6DQogICAgIFsNCiAgICAgICB7DQogICAgICAgICAiRmlyc3QiOiAiUk9CSU4iLA0KICAgICAgICAgIkxhc3QiOiAiTEFGT1JUVU5FIiwNCiAgICAgICAgICJTdHJlZXQiOiAiMjM5NzQgTk9SVEggUkVER1VNIiwNCiAgICAgICAgICJDaXR5IjogIkNIT0NUQVciLA0KICAgICAgICAgIk5wYWdvIjogMSwNCiAgICAgICAgICJDcGFnbyI6ICIxIiwNCiAgICAgICAgICJTdGF0ZSI6ICJNRSIsDQogICAgICAgICAiWmlwIjogIjU0NTMyLTIxNzAiLA0KICAgICAgICAgIkhpcmVkYXRlIjogIjE5MDcwNDE3IiwNCiAgICAgICAgICJNYXJyaWVkIjogdHJ1ZSwNCiAgICAgICAgICJBZ2UiOiA5OCwNCiAgICAgICAgICJTYWxhcnkiOiAyNTUwMCwNCiAgICAgICAgICJOb3RlcyI6ICJUSElTIElTIEEgVEVTVCBGT1IgUkVDT1JEIDUiDQogICAgICAgfSwNCiAgICAgICB7DQogICAgICAgICAiRmlyc3QiOiAiVEFSVEFHTElBIiwNCiAgICAgICAgICJMYXN0IjogIkRPRFNPTiIsDQogICAgICAgICAiU3RyZWV0IjogIjE4ODgzIFNPVVRIV0VTVCAxMlRIIEFWRU5VRSIsDQogICAgICAgICAiQ2l0eSI6ICJERUxUQSIsDQogICAgICAgICAiTnBhZ28iOiAxLA0KICAgICAgICAgIkNwYWdvIjogIjEiLA0KICAgICAgICAgIlN0YXRlIjogIkNUIiwNCiAgICAgICAgICJaaXAiOiAiMzcwMTgtNTcxNiIsDQogICAgICAgICAiSGlyZWRhdGUiOiAiMTk5MTA1MTUiLA0KICAgICAgICAgIk1hcnJpZWQiOiB0cnVlLA0KICAgICAgICAgIkFnZSI6IDY3LA0KICAgICAgICAgIlNhbGFyeSI6IDY2ODAwLA0KICAgICAgICAgIk5vdGVzIjogIlRISVMgSVMgQSBURVNUIEZPUiBSRUNPUkQgNDU5Ig0KICAgICAgIH0sDQogICAgICAgew0KICAgICAgICAgIkZpcnN0IjogIlBFVEVSIiwNCiAgICAgICAgICJMYXN0IjogIkZSSVRaIiwNCiAgICAgICAgICJTdHJlZXQiOiAiMTM2NDUgR1JPU1ZFTk9SIEhBTEwiLA0KICAgICAgICAgIkNpdHkiOiAiTUVTQSIsDQogICAgICAgICAiTnBhZ28iOiAxLA0KICAgICAgICAgIkNwYWdvIjogIjEiLA0KICAgICAgICAgIlN0YXRlIjogIk9IIiwNCiAgICAgICAgICJaaXAiOiAiMzUxMTAtMDIzMyIsDQogICAgICAgICAiSGlyZWRhdGUiOiAiMTk4NzA3MjIiLA0KICAgICAgICAgIk1hcnJpZWQiOiBmYWxzZSwNCiAgICAgICAgICJBZ2UiOiAyNSwNCiAgICAgICAgICJTYWxhcnkiOiA5NTAwMCwNCiAgICAgICAgICJOb3RlcyI6ICJUSElTIElTIEEgVEVTVCBGT1IgUkVDT1JEIDQ2MCINCiAgICAgICB9LA0KICAgICAgIHsNCiAgICAgICAgICJGaXJzdCI6ICJGUkVEIiwNCiAgICAgICAgICJMYXN0IjogIkhJTFRPTiIsDQogICAgICAgICAiU3RyZWV0IjogIjMxOTYgU09VVEggQkxBQ0tIQVdLIEFWRSIsDQogICAgICAgICAiQ2l0eSI6ICJDSEFUVEFOT09HQSIsDQogICAgICAgICAiTnBhZ28iOiAxLA0KICAgICAgICAgIkNwYWdvIjogIjEiLA0KICAgICAgICAgIlN0YXRlIjogIk1EIiwNCiAgICAgICAgICJaaXAiOiAiNTY2OTItNzUyMyIsDQogICAgICAgICAiSGlyZWRhdGUiOiAiMTk5MTA5MDQiLA0KICAgICAgICAgIk1hcnJpZWQiOiB0cnVlLA0KICAgICAgICAgIkFnZSI6IDczLA0KICAgICAgICAgIlNhbGFyeSI6IDIwMDAwLA0KICAgICAgICAgIk5vdGVzIjogIlRISVMgSVMgQSBURVNUIEZPUiBSRUNPUkQgNDYxIg0KICAgICAgIH0sDQogICAgICAgew0KICAgICAgICAgIkZpcnN0IjogIk1BSk9MQSIsDQogICAgICAgICAiTGFzdCI6ICJNT05UQU5BUkkiLA0KICAgICAgICAgIlN0cmVldCI6ICIyMDQ4MSBHUkFORCBBVkVOVUUiLA0KICAgICAgICAgIkNpdHkiOiAiRk9VTlRBSU4gVkFMTEVZIiwNCiAgICAgICAgICJOcGFnbyI6IDEsDQogICAgICAgICAiQ3BhZ28iOiAiMSIsDQogICAgICAgICAiU3RhdGUiOiAiQUsiLA0KICAgICAgICAgIlppcCI6ICIzMzQ5OS04NzU3IiwNCiAgICAgICAgICJIaXJlZGF0ZSI6ICIxOTkyMDgzMCIsDQogICAgICAgICAiTWFycmllZCI6IGZhbHNlLA0KICAgICAgICAgIkFnZSI6IDM0LA0KICAgICAgICAgIlNhbGFyeSI6IDE0NDMwMCwNCiAgICAgICAgICJOb3RlcyI6ICJUSElTIElTIEEgVEVTVCBGT1IgUkVDT1JEIDQ2MiINCiAgICAgICB9LA0KICAgICAgIHsNCiAgICAgICAgICJGaXJzdCI6ICJBUk5BTERPIiwNCiAgICAgICAgICJMYXN0IjogIkNBUk5FWSIsDQogICAgICAgICAiU3RyZWV0IjogIjE2OTIgQlVGRkFMTyBBVkUiLA0KICAgICAgICAgIkNpdHkiOiAiQ09MVU1CVVMiLA0KICAgICAgICAgIk5wYWdvIjogMSwNCiAgICAgICAgICJDcGFnbyI6ICIxIiwNCiAgICAgICAgICJTdGF0ZSI6ICJJTiIsDQogICAgICAgICAiWmlwIjogIjcxMTI4LTMxNDYiLA0KICAgICAgICAgIkhpcmVkYXRlIjogIjE5ODcwNTE0IiwNCiAgICAgICAgICJNYXJyaWVkIjogdHJ1ZSwNCiAgICAgICAgICJBZ2UiOiA2MSwNCiAgICAgICAgICJTYWxhcnkiOiA4MzkwMCwNCiAgICAgICAgICJOb3RlcyI6ICJUSElTIElTIEEgVEVTVCBGT1IgUkVDT1JEIDQ2MyINCiAgICAgICB9LA0KICAgICAgIHsNCiAgICAgICAgICJGaXJzdCI6ICJNQVJHVVJFVEhBIiwNCiAgICAgICAgICJMYXN0IjogIldPT0RXQVJEIiwNCiAgICAgICAgICJTdHJlZXQiOiAiMjkwOTkgQk9YIDMwMyIsDQogICAgICAgICAiQ2l0eSI6ICJOT1JUSCBBTkRPVkVSIiwNCiAgICAgICAgICJOcGFnbyI6IDEsDQogICAgICAgICAiQ3BhZ28iOiAiMSIsDQogICAgICAgICAiU3RhdGUiOiAiU0MiLA0KICAgICAgICAgIlppcCI6ICI0MDg4OC0zNjE5IiwNCiAgICAgICAgICJIaXJlZGF0ZSI6ICIxOTg0MDUzMCIsDQogICAgICAgICAiTWFycmllZCI6IGZhbHNlLA0KICAgICAgICAgIkFnZSI6IDg3LA0KICAgICAgICAgIlNhbGFyeSI6IDEzOTYwMCwNCiAgICAgICAgICJOb3RlcyI6ICJUSElTIElTIEEgVEVTVCBGT1IgUkVDT1JEIDQ2NCINCiAgICAgICB9LA0KICAgICAgIHsNCiAgICAgICAgICJGaXJzdCI6ICJMT1UiLA0KICAgICAgICAgIkxhc3QiOiAiU1RVQkJTIiwNCiAgICAgICAgICJTdHJlZXQiOiAiMjMyMzIgQkFNQlJJREdFIFNUUkVFVCIsDQogICAgICAgICAiQ2l0eSI6ICJPVFRTVklMTEUiLA0KICAgICAgICAgIk5wYWdvIjogMSwNCiAgICAgICAgICJDcGFnbyI6ICIxIiwNCiAgICAgICAgICJTdGF0ZSI6ICJDTyIsDQogICAgICAgICAiWmlwIjogIjg4Mzk5LTU5NzQiLA0KICAgICAgICAgIkhpcmVkYXRlIjogIjE5ODMwMTMwIiwNCiAgICAgICAgICJNYXJyaWVkIjogdHJ1ZSwNCiAgICAgICAgICJBZ2UiOiA1NywNCiAgICAgICAgICJTYWxhcnkiOiA0MDgwMCwNCiAgICAgICAgICJOb3RlcyI6ICJUSElTIElTIEEgVEVTVCBGT1IgUkVDT1JEIDQ2NSINCiAgICAgICB9LA0KICAgICAgIHsNCiAgICAgICAgICJGaXJzdCI6ICJEQVZFIiwNCiAgICAgICAgICJMYXN0IjogIkdPVFNNQU4iLA0KICAgICAgICAgIlN0cmVldCI6ICIxNzk2MCBWQU5ERVZFTiBDT1VSVCIsDQogICAgICAgICAiQ2l0eSI6ICJMQVZFUk5FIiwNCiAgICAgICAgICJOcGFnbyI6IDEsDQogICAgICAgICAiQ3BhZ28iOiAiMSIsDQogICAgICAgICAiU3RhdGUiOiAiS1MiLA0KICAgICAgICAgIlppcCI6ICI2ODkzMi0zOTkwIiwNCiAgICAgICAgICJIaXJlZGF0ZSI6ICIxOTg5MDQwOSIsDQogICAgICAgICAiTWFycmllZCI6IGZhbHNlLA0KICAgICAgICAgIkFnZSI6IDkyLA0KICAgICAgICAgIlNhbGFyeSI6IDEwNzUwMCwNCiAgICAgICAgICJOb3RlcyI6ICJUSElTIElTIEEgVEVTVCBGT1IgUkVDT1JEIDQ2NiINCiAgICAgICB9LA0KICAgICAgIHsNCiAgICAgICAgICJGaXJzdCI6ICJPVkVEIiwNCiAgICAgICAgICJMYXN0IjogIklSV0lOIiwNCiAgICAgICAgICJTdHJlZXQiOiAiMjIxNTIgQVZPTiBQTEFDRSIsDQogICAgICAgICAiQ2l0eSI6ICJTVU5OWVZBTEUiLA0KICAgICAgICAgIk5wYWdvIjogMSwNCiAgICAgICAgICJDcGFnbyI6ICIxIiwNCiAgICAgICAgICJTdGF0ZSI6ICJVVCIsDQogICAgICAgICAiWmlwIjogIjExMDYyLTk1OTYiLA0KICAgICAgICAgIkhpcmVkYXRlIjogIjE5OTAxMjE2IiwNCiAgICAgICAgICJNYXJyaWVkIjogdHJ1ZSwNCiAgICAgICAgICJBZ2UiOiA0NywNCiAgICAgICAgICJTYWxhcnkiOiAzNzIwMCwNCiAgICAgICAgICJOb3RlcyI6ICJUSElTIElTIEEgVEVTVCBGT1IgUkVDT1JEIDQ2NyINCiAgICAgICB9LA0KICAgICAgIHsNCiAgICAgICAgICJGaXJzdCI6ICJCT0hEQU4iLA0KICAgICAgICAgIkxhc3QiOiAiU0FBRCIsDQogICAgICAgICAiU3RyZWV0IjogIjIyNTI4IEJFQVVSRUdBUkQgU1RSRUVUIiwNCiAgICAgICAgICJDaXR5IjogIlNQUklOR0ZJRUxEIiwNCiAgICAgICAgICJOcGFnbyI6IDEsDQogICAgICAgICAiQ3BhZ28iOiAiMSIsDQogICAgICAgICAiU3RhdGUiOiAiTlYiLA0KICAgICAgICAgIlppcCI6ICI1Mzc2Ny02ODQyIiwNCiAgICAgICAgICJIaXJlZGF0ZSI6ICIxOTkwMDYxOCIsDQogICAgICAgICAiTWFycmllZCI6IGZhbHNlLA0KICAgICAgICAgIkFnZSI6IDg0LA0KICAgICAgICAgIlNhbGFyeSI6IDEwNjcwMCwNCiAgICAgICAgICJOb3RlcyI6ICJUSElTIElTIEEgVEVTVCBGT1IgUkVDT1JEIDQ2OCINCiAgICAgICB9LA0KICAgICAgIHsNCiAgICAgICAgICJGaXJzdCI6ICJBTEkiLA0KICAgICAgICAgIkxhc3QiOiAiSEFBTiIsDQogICAgICAgICAiU3RyZWV0IjogIjE5ODMwIElORFVTVFJJQUwgRFJJVkUiLA0KICAgICAgICAgIkNpdHkiOiAiU0FOIEZSQU5DSVNDTyIsDQogICAgICAgICAiTnBhZ28iOiAxLA0KICAgICAgICAgIkNwYWdvIjogIjEiLA0KICAgICAgICAgIlN0YXRlIjogIkFaIiwNCiAgICAgICAgICJaaXAiOiAiMjQ0MzYtNzcxMyIsDQogICAgICAgICAiSGlyZWRhdGUiOiAiMTk4ODAyMTciLA0KICAgICAgICAgIk1hcnJpZWQiOiB0cnVlLA0KICAgICAgICAgIkFnZSI6IDQ0LA0KICAgICAgICAgIlNhbGFyeSI6IDU1ODAwLA0KICAgICAgICAgIk5vdGVzIjogIlRISVMgSVMgQSBURVNUIEZPUiBSRUNPUkQgNDY5Ig0KICAgICAgIH0sDQogICAgICAgew0KICAgICAgICAgIkZpcnN0IjogIkxBTSIsDQogICAgICAgICAiTGFzdCI6ICJCSUNLTEVZIiwNCiAgICAgICAgICJTdHJlZXQiOiAiMjI4MyBQSU9OQ0lBTkEiLA0KICAgICAgICAgIkNpdHkiOiAiTU9OVFZJTExFIiwNCiAgICAgICAgICJOcGFnbyI6IDEsDQogICAgICAgICAiQ3BhZ28iOiAiMSIsDQogICAgICAgICAiU3RhdGUiOiAiV1kiLA0KICAgICAgICAgIlppcCI6ICIzNDM3Mi02ODA5IiwNCiAgICAgICAgICJIaXJlZGF0ZSI6ICIxOTg1MDMxMCIsDQogICAgICAgICAiTWFycmllZCI6IGZhbHNlLA0KICAgICAgICAgIkFnZSI6IDM4LA0KICAgICAgICAgIlNhbGFyeSI6IDI5MjAwLA0KICAgICAgICAgIk5vdGVzIjogIlRISVMgSVMgQSBURVNUIEZPUiBSRUNPUkQgNDcwIg0KICAgICAgIH0sDQogICAgICAgew0KICAgICAgICAgIkZpcnN0IjogIlZJTkNFTlQiLA0KICAgICAgICAgIkxhc3QiOiAiQkVDS0VSTUFOIiwNCiAgICAgICAgICJTdHJlZXQiOiAiMjQ1OTYgRVhDSEFOR0UgUExBQ0UiLA0KICAgICAgICAgIkNpdHkiOiAiVE9ST05UTyIsDQogICAgICAgICAiTnBhZ28iOiAxLA0KICAgICAgICAgIkNwYWdvIjogIjEiLA0KICAgICAgICAgIlN0YXRlIjogIktZIiwNCiAgICAgICAgICJaaXAiOiAiNDE3NTItMDcxMCIsDQogICAgICAgICAiSGlyZWRhdGUiOiAiMTk5MjExMDkiLA0KICAgICAgICAgIk1hcnJpZWQiOiB0cnVlLA0KICAgICAgICAgIkFnZSI6IDY3LA0KICAgICAgICAgIlNhbGFyeSI6IDI1MDAsDQogICAgICAgICAiTm90ZXMiOiAiVEhJUyBJUyBBIFRFU1QgRk9SIFJFQ09SRCA0NzEiDQogICAgICAgfSwNCiAgICAgICB7DQogICAgICAgICAiRmlyc3QiOiAiTEVOT1JFIiwNCiAgICAgICAgICJMYXN0IjogIkpPQ0hVTSIsDQogICAgICAgICAiU3RyZWV0IjogIjE0MyBDQU5BTkRBSUdVQSBST0FEIiwNCiAgICAgICAgICJDaXR5IjogIk1PTlRHT01FUlkiLA0KICAgICAgICAgIk5wYWdvIjogMSwNCiAgICAgICAgICJDcGFnbyI6ICIxIiwNCiAgICAgICAgICJTdGF0ZSI6ICJMQSIsDQogICAgICAgICAiWmlwIjogIjEzNzE3LTAyMDUiLA0KICAgICAgICAgIkhpcmVkYXRlIjogIjE5OTIwODI4IiwNCiAgICAgICAgICJNYXJyaWVkIjogZmFsc2UsDQogICAgICAgICAiQWdlIjogNDYsDQogICAgICAgICAiU2FsYXJ5IjogMjQwMCwNCiAgICAgICAgICJOb3RlcyI6ICJUSElTIElTIEEgVEVTVCBGT1IgUkVDT1JEIDQ3MiINCiAgICAgICB9LA0KICAgICAgIHsNCiAgICAgICAgICJGaXJzdCI6ICJHVU5USEVSIiwNCiAgICAgICAgICJMYXN0IjogIkJMQUtFIiwNCiAgICAgICAgICJTdHJlZXQiOiAiMjEzMzkgQ0xBUktTIEhJTEwiLA0KICAgICAgICAgIkNpdHkiOiAiTEFLRUxBTkQiLA0KICAgICAgICAgIk5wYWdvIjogMSwNCiAgICAgICAgICJDcGFnbyI6ICIxIiwNCiAgICAgICAgICJTdGF0ZSI6ICJTRCIsDQogICAgICAgICAiWmlwIjogIjIxNjgyLTg1OTMiLA0KICAgICAgICAgIkhpcmVkYXRlIjogIjE5ODcwNDIxIiwNCiAgICAgICAgICJNYXJyaWVkIjogdHJ1ZSwNCiAgICAgICAgICJBZ2UiOiA4NiwNCiAgICAgICAgICJTYWxhcnkiOiAyNjUwMCwNCiAgICAgICAgICJOb3RlcyI6ICJUSElTIElTIEEgVEVTVCBGT1IgUkVDT1JEIDQ3MyINCiAgICAgICB9LA0KICAgICAgIHsNCiAgICAgICAgICJGaXJzdCI6ICJBUlRIVVIiLA0KICAgICAgICAgIkxhc3QiOiAiUVVJTk4iLA0KICAgICAgICAgIlN0cmVldCI6ICIyMTkwMCBCT1hXT09EIExBTkUiLA0KICAgICAgICAgIkNpdHkiOiAiTEFGQVlFVFRFIiwNCiAgICAgICAgICJOcGFnbyI6IDEsDQogICAgICAgICAiQ3BhZ28iOiAiMSIsDQogICAgICAgICAiU3RhdGUiOiAiQ1QiLA0KICAgICAgICAgIlppcCI6ICIxMjA3MC05NDE2IiwNCiAgICAgICAgICJIaXJlZGF0ZSI6ICIxOTg2MDMyOSIsDQogICAgICAgICAiTWFycmllZCI6IGZhbHNlLA0KICAgICAgICAgIkFnZSI6IDc1LA0KICAgICAgICAgIlNhbGFyeSI6IDU1NjAwLA0KICAgICAgICAgIk5vdGVzIjogIlRISVMgSVMgQSBURVNUIEZPUiBSRUNPUkQgNDc0Ig0KICAgICAgIH0sDQogICAgICAgew0KICAgICAgICAgIkZpcnN0IjogIkxVQ0lBTiIsDQogICAgICAgICAiTGFzdCI6ICJLRUxMRVkiLA0KICAgICAgICAgIlN0cmVldCI6ICIyMzYzMyBTVyBNQVJUSU4gRE9XTlMgQkxWRCIsDQogICAgICAgICAiQ2l0eSI6ICJGT1JUIE1JTEwiLA0KICAgICAgICAgIk5wYWdvIjogMSwNCiAgICAgICAgICJDcGFnbyI6ICIxIiwNCiAgICAgICAgICJTdGF0ZSI6ICJXViIsDQogICAgICAgICAiWmlwIjogIjYyMDc0LTI5ODkiLA0KICAgICAgICAgIkhpcmVkYXRlIjogIjE5ODMwNTMxIiwNCiAgICAgICAgICJNYXJyaWVkIjogdHJ1ZSwNCiAgICAgICAgICJBZ2UiOiA5MiwNCiAgICAgICAgICJTYWxhcnkiOiAxNTQwMCwNCiAgICAgICAgICJOb3RlcyI6ICJUSElTIElTIEEgVEVTVCBGT1IgUkVDT1JEIDQ3NSINCiAgICAgICB9LA0KICAgICAgIHsNCiAgICAgICAgICJGaXJzdCI6ICJCRUNLWSIsDQogICAgICAgICAiTGFzdCI6ICJDT0xFTUFOIiwNCiAgICAgICAgICJTdHJlZXQiOiAiMjk4ODQgTk9SVEggV0VTVCA2NlRIIFNUIiwNCiAgICAgICAgICJDaXR5IjogIkFOTiBBUkJPUiIsDQogICAgICAgICAiTnBhZ28iOiAxLA0KICAgICAgICAgIkNwYWdvIjogIjEiLA0KICAgICAgICAgIlN0YXRlIjogIk1FIiwNCiAgICAgICAgICJaaXAiOiAiODUwMjQtNTE4NyIsDQogICAgICAgICAiSGlyZWRhdGUiOiAiMTk5MDEyMTgiLA0KICAgICAgICAgIk1hcnJpZWQiOiBmYWxzZSwNCiAgICAgICAgICJBZ2UiOiA3MSwNCiAgICAgICAgICJTYWxhcnkiOiA0NjEwMCwNCiAgICAgICAgICJOb3RlcyI6ICJUSElTIElTIEEgVEVTVCBGT1IgUkVDT1JEIDQ3NiINCiAgICAgICB9LA0KICAgICAgIHsNCiAgICAgICAgICJGaXJzdCI6ICJSRUciLA0KICAgICAgICAgIkxhc3QiOiAiSE9ORyIsDQogICAgICAgICAiU3RyZWV0IjogIjEwMTAgTUVMUk9TRSBBVkVOVUUiLA0KICAgICAgICAgIkNpdHkiOiAiTElTTEUiLA0KICAgICAgICAgIk5wYWdvIjogMSwNCiAgICAgICAgICJDcGFnbyI6ICIxIiwNCiAgICAgICAgICJTdGF0ZSI6ICJPSCIsDQogICAgICAgICAiWmlwIjogIjY2NjczLTEwNTEiLA0KICAgICAgICAgIkhpcmVkYXRlIjogIjE5ODgwMzI3IiwNCiAgICAgICAgICJNYXJyaWVkIjogdHJ1ZSwNCiAgICAgICAgICJBZ2UiOiA0NCwNCiAgICAgICAgICJTYWxhcnkiOiAxMDExMDAsDQogICAgICAgICAiTm90ZXMiOiAiVEhJUyBJUyBBIFRFU1QgRk9SIFJFQ09SRCA0NzciDQogICAgICAgfSwNCiAgICAgICB7DQogICAgICAgICAiRmlyc3QiOiAiTEFOQ0UiLA0KICAgICAgICAgIkxhc3QiOiAiVEhPTVNPTiIsDQogICAgICAgICAiU3RyZWV0IjogIjI3NDAgTEFXUkVOQ0UgQVZFIFdFU1QiLA0KICAgICAgICAgIkNpdHkiOiAiVkFDQVZJTExFIiwNCiAgICAgICAgICJOcGFnbyI6IDEsDQogICAgICAgICAiQ3BhZ28iOiAiMSIsDQogICAgICAgICAiU3RhdGUiOiAiV0kiLA0KICAgICAgICAgIlppcCI6ICIwNTU5OS05MTQ0IiwNCiAgICAgICAgICJIaXJlZGF0ZSI6ICIxOTg5MTIwNyIsDQogICAgICAgICAiTWFycmllZCI6IGZhbHNlLA0KICAgICAgICAgIkFnZSI6IDI2LA0KICAgICAgICAgIlNhbGFyeSI6IDEwODkwMCwNCiAgICAgICAgICJOb3RlcyI6ICJUSElTIElTIEEgVEVTVCBGT1IgUkVDT1JEIDQ3OCINCiAgICAgICB9LA0KICAgICAgIHsNCiAgICAgICAgICJGaXJzdCI6ICJEQVJSRUxMIiwNCiAgICAgICAgICJMYXN0IjogIkhVU1NBSU4iLA0KICAgICAgICAgIlN0cmVldCI6ICIxODc1IFdISVBQTEUgQVZFIE5XIiwNCiAgICAgICAgICJDaXR5IjogIkJFTFRTVklMTEUiLA0KICAgICAgICAgIk5wYWdvIjogMSwNCiAgICAgICAgICJDcGFnbyI6ICIxIiwNCiAgICAgICAgICJTdGF0ZSI6ICJNSSIsDQogICAgICAgICAiWmlwIjogIjc2NzgwLTUzMDIiLA0KICAgICAgICAgIkhpcmVkYXRlIjogIjE5ODMxMjE1IiwNCiAgICAgICAgICJNYXJyaWVkIjogdHJ1ZSwNCiAgICAgICAgICJBZ2UiOiA2NiwNCiAgICAgICAgICJTYWxhcnkiOiA5NDEwMCwNCiAgICAgICAgICJOb3RlcyI6ICJUSElTIElTIEEgVEVTVCBGT1IgUkVDT1JEIDQ3OSINCiAgICAgICB9LA0KICAgICAgIHsNCiAgICAgICAgICJGaXJzdCI6ICJXRVNMRVkiLA0KICAgICAgICAgIkxhc3QiOiAiR09UU01BTCIsDQogICAgICAgICAiU3RyZWV0IjogIjI5NTgzIEUgTElOQ09MTiIsDQogICAgICAgICAiQ2l0eSI6ICJKRVJTRVkgQ0lUWSIsDQogICAgICAgICAiTnBhZ28iOiAxLA0KICAgICAgICAgIkNwYWdvIjogIjEiLA0KICAgICAgICAgIlN0YXRlIjogIkFMIiwNCiAgICAgICAgICJaaXAiOiAiMTg0MTUtOTUyMyIsDQogICAgICAgICAiSGlyZWRhdGUiOiAiMTk4NjA3MTYiLA0KICAgICAgICAgIk1hcnJpZWQiOiBmYWxzZSwNCiAgICAgICAgICJBZ2UiOiA2NywNCiAgICAgICAgICJTYWxhcnkiOiAxMTY4MDAsDQogICAgICAgICAiTm90ZXMiOiAiVEhJUyBJUyBBIFRFU1QgRk9SIFJFQ09SRCA0ODAiDQogICAgICAgfSwNCiAgICAgICB7DQogICAgICAgICAiRmlyc3QiOiAiRlJBTksiLA0KICAgICAgICAgIkxhc3QiOiAiREVBUlJZIiwNCiAgICAgICAgICJTdHJlZXQiOiAiMjI1MzAgRk9SRVNUIERSSVZFIiwNCiAgICAgICAgICJDaXR5IjogIldPT0RCUklER0UiLA0KICAgICAgICAgIk5wYWdvIjogMSwNCiAgICAgICAgICJDcGFnbyI6ICIxIiwNCiAgICAgICAgICJTdGF0ZSI6ICJNTyIsDQogICAgICAgICAiWmlwIjogIjIwNjgzLTc2NjciLA0KICAgICAgICAgIkhpcmVkYXRlIjogIjE5ODQxMjMxIiwNCiAgICAgICAgICJNYXJyaWVkIjogdHJ1ZSwNCiAgICAgICAgICJBZ2UiOiA5MSwNCiAgICAgICAgICJTYWxhcnkiOiA1OTkwMCwNCiAgICAgICAgICJOb3RlcyI6ICJUSElTIElTIEEgVEVTVCBGT1IgUkVDT1JEIDQ4MSINCiAgICAgICB9LA0KICAgICAgIHsNCiAgICAgICAgICJGaXJzdCI6ICJQSElMSVBQRSIsDQogICAgICAgICAiTGFzdCI6ICJQRVpaQU5JIiwNCiAgICAgICAgICJTdHJlZXQiOiAiMjk5MzMgTEFVUklFIExBTkUiLA0KICAgICAgICAgIkNpdHkiOiAiQkFMVElNT1JFIiwNCiAgICAgICAgICJOcGFnbyI6IDEsDQogICAgICAgICAiQ3BhZ28iOiAiMSIsDQogICAgICAgICAiU3RhdGUiOiAiQVIiLA0KICAgICAgICAgIlppcCI6ICI3MDQxNy03MDE5IiwNCiAgICAgICAgICJIaXJlZGF0ZSI6ICIxOTg0MDkxMyIsDQogICAgICAgICAiTWFycmllZCI6IGZhbHNlLA0KICAgICAgICAgIkFnZSI6IDY5LA0KICAgICAgICAgIlNhbGFyeSI6IDEwNjMwMCwNCiAgICAgICAgICJOb3RlcyI6ICJUSElTIElTIEEgVEVTVCBGT1IgUkVDT1JEIDQ4MiINCiAgICAgICB9LA0KICAgICAgIHsNCiAgICAgICAgICJGaXJzdCI6ICJSQU5EQUxMIiwNCiAgICAgICAgICJMYXN0IjogIkJSRU1BTiIsDQogICAgICAgICAiU3RyZWV0IjogIjgzNjkgU09LT0xPViBTVFJFRVQiLA0KICAgICAgICAgIkNpdHkiOiAiU09VVEggRUxHSU4iLA0KICAgICAgICAgIk5wYWdvIjogMSwNCiAgICAgICAgICJDcGFnbyI6ICIxIiwNCiAgICAgICAgICJTdGF0ZSI6ICJQQSIsDQogICAgICAgICAiWmlwIjogIjEzMzM5LTQ1MDMiLA0KICAgICAgICAgIkhpcmVkYXRlIjogIjE5ODYwNjE5IiwNCiAgICAgICAgICJNYXJyaWVkIjogdHJ1ZSwNCiAgICAgICAgICJBZ2UiOiA4MCwNCiAgICAgICAgICJTYWxhcnkiOiA0NDEwMCwNCiAgICAgICAgICJOb3RlcyI6ICJUSElTIElTIEEgVEVTVCBGT1IgUkVDT1JEIDQ4MyINCiAgICAgICB9LA0KICAgICAgIHsNCiAgICAgICAgICJGaXJzdCI6ICJUUk9ZIiwNCiAgICAgICAgICJMYXN0IjogIkNBSU4iLA0KICAgICAgICAgIlN0cmVldCI6ICIxNzk3NiBVTklWRVJTSVRZIEFWRU5VRSIsDQogICAgICAgICAiQ2l0eSI6ICJTUFJJTkdGSUVMRCIsDQogICAgICAgICAiTnBhZ28iOiAxLA0KICAgICAgICAgIkNwYWdvIjogIjEiLA0KICAgICAgICAgIlN0YXRlIjogIk5WIiwNCiAgICAgICAgICJaaXAiOiAiMDU5NTAtNDE5MSIsDQogICAgICAgICAiSGlyZWRhdGUiOiAiMTk4NDA2MjMiLA0KICAgICAgICAgIk1hcnJpZWQiOiBmYWxzZSwNCiAgICAgICAgICJBZ2UiOiA5OSwNCiAgICAgICAgICJTYWxhcnkiOiAxMjAzMDAsDQogICAgICAgICAiTm90ZXMiOiAiVEhJUyBJUyBBIFRFU1QgRk9SIFJFQ09SRCA0ODQiDQogICAgICAgfSwNCiAgICAgICB7DQogICAgICAgICAiRmlyc3QiOiAiQkVSTkhBUkQiLA0KICAgICAgICAgIkxhc3QiOiAiSEFMRVkiLA0KICAgICAgICAgIlN0cmVldCI6ICIyOTIwMyBDQVJNRU5JVEEgUk9BRCIsDQogICAgICAgICAiQ2l0eSI6ICJUQUxMQUhBU1NFIiwNCiAgICAgICAgICJOcGFnbyI6IDEsDQogICAgICAgICAiQ3BhZ28iOiAiMSIsDQogICAgICAgICAiU3RhdGUiOiAiVFgiLA0KICAgICAgICAgIlppcCI6ICI3MjgxMS05OTEyIiwNCiAgICAgICAgICJIaXJlZGF0ZSI6ICIxOTkyMDIwOCIsDQogICAgICAgICAiTWFycmllZCI6IHRydWUsDQogICAgICAgICAiQWdlIjogNDIsDQogICAgICAgICAiU2FsYXJ5IjogMzgyMDAsDQogICAgICAgICAiTm90ZXMiOiAiVEhJUyBJUyBBIFRFU1QgRk9SIFJFQ09SRCA0ODUiDQogICAgICAgfSwNCiAgICAgICB7DQogICAgICAgICAiRmlyc3QiOiAiQlJVTk8iLA0KICAgICAgICAgIkxhc3QiOiAiV0lMU09OIiwNCiAgICAgICAgICJTdHJlZXQiOiAiMTEwNDcgS05PTExTSURFIExBTkUiLA0KICAgICAgICAgIkNpdHkiOiAiVklDVE9SSUEiLA0KICAgICAgICAgIk5wYWdvIjogMSwNCiAgICAgICAgICJDcGFnbyI6ICIxIiwNCiAgICAgICAgICJTdGF0ZSI6ICJBWiIsDQogICAgICAgICAiWmlwIjogIjg0NjM3LTI1ODgiLA0KICAgICAgICAgIkhpcmVkYXRlIjogIjE5ODMwNjI1IiwNCiAgICAgICAgICJNYXJyaWVkIjogZmFsc2UsDQogICAgICAgICAiQWdlIjogNjcsDQogICAgICAgICAiU2FsYXJ5IjogMTAyOTAwLA0KICAgICAgICAgIk5vdGVzIjogIlRISVMgSVMgQSBURVNUIEZPUiBSRUNPUkQgNDg2Ig0KICAgICAgIH0sDQogICAgICAgew0KICAgICAgICAgIkZpcnN0IjogIlNVWkFOTkUiLA0KICAgICAgICAgIkxhc3QiOiAiR0FMVkVaIiwNCiAgICAgICAgICJTdHJlZXQiOiAiMzE3NTEgRk9DSFQgQVZFTlVFIiwNCiAgICAgICAgICJDaXR5IjogIkxBS0VMQU5EIiwNCiAgICAgICAgICJOcGFnbyI6IDEsDQogICAgICAgICAiQ3BhZ28iOiAiMSIsDQogICAgICAgICAiU3RhdGUiOiAiS1kiLA0KICAgICAgICAgIlppcCI6ICI4MjQ4Ni03Mjk2IiwNCiAgICAgICAgICJIaXJlZGF0ZSI6ICIxOTkxMDUwNCIsDQogICAgICAgICAiTWFycmllZCI6IHRydWUsDQogICAgICAgICAiQWdlIjogNzgsDQogICAgICAgICAiU2FsYXJ5IjogMzY3MDAsDQogICAgICAgICAiTm90ZXMiOiAiVEhJUyBJUyBBIFRFU1QgRk9SIFJFQ09SRCA0ODciDQogICAgICAgfSwNCiAgICAgICB7DQogICAgICAgICAiRmlyc3QiOiAiTklDSyIsDQogICAgICAgICAiTGFzdCI6ICJKT05FUyIsDQogICAgICAgICAiU3RyZWV0IjogIjkzNDkgQkVMTE1PUkUiLA0KICAgICAgICAgIkNpdHkiOiAiQUxMRU5UT1dOIiwNCiAgICAgICAgICJOcGFnbyI6IDEsDQogICAgICAgICAiQ3BhZ28iOiAiMSIsDQogICAgICAgICAiU3RhdGUiOiAiTEEiLA0KICAgICAgICAgIlppcCI6ICIxMTgwMC05NDQ2IiwNCiAgICAgICAgICJIaXJlZGF0ZSI6ICIxOTg5MDYwOCIsDQogICAgICAgICAiTWFycmllZCI6IGZhbHNlLA0KICAgICAgICAgIkFnZSI6IDUzLA0KICAgICAgICAgIlNhbGFyeSI6IDQ4MjAwLA0KICAgICAgICAgIk5vdGVzIjogIlRISVMgSVMgQSBURVNUIEZPUiBSRUNPUkQgNDg4Ig0KICAgICAgIH0sDQogICAgICAgew0KICAgICAgICAgIkZpcnN0IjogIlRSRVZPUiIsDQogICAgICAgICAiTGFzdCI6ICJSVVNTRUwiLA0KICAgICAgICAgIlN0cmVldCI6ICIzMDQ1MyBDQVJPTElOQSBBVkVOVUUiLA0KICAgICAgICAgIkNpdHkiOiAiU1RFVkVOUyBQT0lOVCIsDQogICAgICAgICAiTnBhZ28iOiAxLA0KICAgICAgICAgIkNwYWdvIjogIjEiLA0KICAgICAgICAgIlN0YXRlIjogIklEIiwNCiAgICAgICAgICJaaXAiOiAiNDg2MjgtOTg5NyIsDQogICAgICAgICAiSGlyZWRhdGUiOiAiMTk4OTAyMTgiLA0KICAgICAgICAgIk1hcnJpZWQiOiB0cnVlLA0KICAgICAgICAgIkFnZSI6IDgxLA0KICAgICAgICAgIlNhbGFyeSI6IDY0NjAwLA0KICAgICAgICAgIk5vdGVzIjogIlRISVMgSVMgQSBURVNUIEZPUiBSRUNPUkQgNDg5Ig0KICAgICAgIH0sDQogICAgICAgew0KICAgICAgICAgIkZpcnN0IjogIkJFSFpBRCIsDQogICAgICAgICAiTGFzdCI6ICJTVE9PUFMiLA0KICAgICAgICAgIlN0cmVldCI6ICIzMTU0MCBIVU5ORVdFTEwgU1RSRUVUIiwNCiAgICAgICAgICJDaXR5IjogIkdMRU5EQUxFIiwNCiAgICAgICAgICJOcGFnbyI6IDEsDQogICAgICAgICAiQ3BhZ28iOiAiMSIsDQogICAgICAgICAiU3RhdGUiOiAiQ1QiLA0KICAgICAgICAgIlppcCI6ICI2ODU4MS0wNjcyIiwNCiAgICAgICAgICJIaXJlZGF0ZSI6ICIxOTkxMTIxNiIsDQogICAgICAgICAiTWFycmllZCI6IGZhbHNlLA0KICAgICAgICAgIkFnZSI6IDcyLA0KICAgICAgICAgIlNhbGFyeSI6IDEwNjUwMCwNCiAgICAgICAgICJOb3RlcyI6ICJUSElTIElTIEEgVEVTVCBGT1IgUkVDT1JEIDQ5MCINCiAgICAgICB9LA0KICAgICAgIHsNCiAgICAgICAgICJGaXJzdCI6ICJDTEVTU09OIiwNCiAgICAgICAgICJMYXN0IjogIkZJU0hFUiIsDQogICAgICAgICAiU3RyZWV0IjogIjg1NjcgU0hFUk1BTiBXQVkiLA0KICAgICAgICAgIkNpdHkiOiAiTEFWRVJORSIsDQogICAgICAgICAiTnBhZ28iOiAxLA0KICAgICAgICAgIkNwYWdvIjogIjEiLA0KICAgICAgICAgIlN0YXRlIjogIk1FIiwNCiAgICAgICAgICJaaXAiOiAiNzg5OTQtMDE5MiIsDQogICAgICAgICAiSGlyZWRhdGUiOiAiMTk4NDAzMTYiLA0KICAgICAgICAgIk1hcnJpZWQiOiB0cnVlLA0KICAgICAgICAgIkFnZSI6IDg2LA0KICAgICAgICAgIlNhbGFyeSI6IDEyMDgwMCwNCiAgICAgICAgICJOb3RlcyI6ICJUSElTIElTIEEgVEVTVCBGT1IgUkVDT1JEIDQ5MSINCiAgICAgICB9LA0KICAgICAgIHsNCiAgICAgICAgICJGaXJzdCI6ICJMRU5PUkUiLA0KICAgICAgICAgIkxhc3QiOiAiQ09UVEVSSUxMIiwNCiAgICAgICAgICJTdHJlZXQiOiAiMTA2MDUgU09VVEggVU5JVkVSU0lUWSIsDQogICAgICAgICAiQ2l0eSI6ICJPUkxBTkQgUEFSSyIsDQogICAgICAgICAiTnBhZ28iOiAxLA0KICAgICAgICAgIkNwYWdvIjogIjEiLA0KICAgICAgICAgIlN0YXRlIjogIk1EIiwNCiAgICAgICAgICJaaXAiOiAiMzY0OTYtNDQ2OSIsDQogICAgICAgICAiSGlyZWRhdGUiOiAiMTk4ODAxMjciLA0KICAgICAgICAgIk1hcnJpZWQiOiBmYWxzZSwNCiAgICAgICAgICJBZ2UiOiA4MSwNCiAgICAgICAgICJTYWxhcnkiOiA5ODgwMCwNCiAgICAgICAgICJOb3RlcyI6ICJUSElTIElTIEEgVEVTVCBGT1IgUkVDT1JEIDQ5MiINCiAgICAgICB9LA0KICAgICAgIHsNCiAgICAgICAgICJGaXJzdCI6ICJCWVJPTiIsDQogICAgICAgICAiTGFzdCI6ICJET1dEIiwNCiAgICAgICAgICJTdHJlZXQiOiAiMzAyNjYgUkVORSBMRVZFU1FVRSBXRVNUIiwNCiAgICAgICAgICJDaXR5IjogIkZPUlQgQ09MTElOUyIsDQogICAgICAgICAiTnBhZ28iOiAxLA0KICAgICAgICAgIkNwYWdvIjogIjEiLA0KICAgICAgICAgIlN0YXRlIjogIkhJIiwNCiAgICAgICAgICJaaXAiOiAiNDcxNzAtMTc2OSIsDQogICAgICAgICAiSGlyZWRhdGUiOiAiMTk4ODA0MDUiLA0KICAgICAgICAgIk1hcnJpZWQiOiB0cnVlLA0KICAgICAgICAgIkFnZSI6IDc4LA0KICAgICAgICAgIlNhbGFyeSI6IDMyNjAwLA0KICAgICAgICAgIk5vdGVzIjogIlRISVMgSVMgQSBURVNUIEZPUiBSRUNPUkQgNDkzIg0KICAgICAgIH0sDQogICAgICAgew0KICAgICAgICAgIkZpcnN0IjogIkRBVklEIiwNCiAgICAgICAgICJMYXN0IjogIlpFQUwiLA0KICAgICAgICAgIlN0cmVldCI6ICIyNjE4NyBDT0hFTiBTVFJFRVQiLA0KICAgICAgICAgIkNpdHkiOiAiQ0hBVFRBTk9PR0EiLA0KICAgICAgICAgIk5wYWdvIjogMSwNCiAgICAgICAgICJDcGFnbyI6ICIxIiwNCiAgICAgICAgICJTdGF0ZSI6ICJBSyIsDQogICAgICAgICAiWmlwIjogIjI5Mjg3LTI3MDEiLA0KICAgICAgICAgIkhpcmVkYXRlIjogIjE5ODMwNTAzIiwNCiAgICAgICAgICJNYXJyaWVkIjogZmFsc2UsDQogICAgICAgICAiQWdlIjogNzAsDQogICAgICAgICAiU2FsYXJ5IjogMzUwMCwNCiAgICAgICAgICJOb3RlcyI6ICJUSElTIElTIEEgVEVTVCBGT1IgUkVDT1JEIDQ5NCINCiAgICAgICB9LA0KICAgICAgIHsNCiAgICAgICAgICJGaXJzdCI6ICJKQUNLSUUiLA0KICAgICAgICAgIkxhc3QiOiAiQkVDS0VSTUFOIiwNCiAgICAgICAgICJTdHJlZXQiOiAiMzIyOTIgREVWT05TSElSQSBEUklWRSIsDQogICAgICAgICAiQ2l0eSI6ICJPUkFOR0UiLA0KICAgICAgICAgIk5wYWdvIjogMSwNCiAgICAgICAgICJDcGFnbyI6ICIxIiwNCiAgICAgICAgICJTdGF0ZSI6ICJPSyIsDQogICAgICAgICAiWmlwIjogIjIxMDI1LTY3OTciLA0KICAgICAgICAgIkhpcmVkYXRlIjogIjE5ODcwMjA5IiwNCiAgICAgICAgICJNYXJyaWVkIjogdHJ1ZSwNCiAgICAgICAgICJBZ2UiOiA5MywNCiAgICAgICAgICJTYWxhcnkiOiAxMzMzMDAsDQogICAgICAgICAiTm90ZXMiOiAiVEhJUyBJUyBBIFRFU1QgRk9SIFJFQ09SRCA0OTUiDQogICAgICAgfQ0KICAgICBdDQogICB9DQogICBFTkRURVhUDQoNCiAgIERFRkFVTFQgbkNvbHMgVE8gMA0KDQogICBhSGVhZGVyIDo9IHt9DQogICBhRGF0YSAgIDo9IHt9DQoNCiAgIEhCX0pzb25EZWNvZGUoIGNEYXRhLCBAaERhdGEgKQ0KDQogICBJRiBMZW4oIGhEYXRhWyAnQ1VTVE9NRVInIF0gKSA+IDANCiAgICAgIGFSZWMgOj0ge30NCiAgICAgIEZPUiBFQUNIIHhWYWx1ZSBJTiBIQl9IS2V5cyggaERhdGFbICdDVVNUT01FUicgXVsgMSBdICkNCiAgICAgICAgIElGIG5Db2xzID09IDAgLk9SLiBMZW4oIGFSZWMgKSA8IG5Db2xzDQogICAgICAgICAgICBBQWRkKCBhUmVjLCB4VmFsdWUgKQ0KICAgICAgICAgRU5ESUYNCiAgICAgIE5FWFQNCiAgICAgIEFBZGQoIGFIZWFkZXIsIGFSZWMgKQ0KICAgRU5ESUYNCg0KICAgRk9SIEVBQ0ggaFJlYyBJTiBoRGF0YVsgJ0NVU1RPTUVSJyBdDQogICAgICBhUmVjIDo9IHt9DQogICAgICBGT1IgRUFDSCB4VmFsdWUgSU4gaFJlYw0KICAgICAgICAgSUYgbkNvbHMgPT0gMCAuT1IuIExlbiggYVJlYyApIDwgbkNvbHMNCiAgICAgICAgICAgIEFBZGQoIGFSZWMsIHhWYWx1ZSApDQogICAgICAgICBFTkRJRg0KICAgICAgTkVYVA0KICAgICAgQUFkZCggYURhdGEsIGFSZWMgKQ0KICAgTkVYVA0KDQpSRVRVUk4gTklMDQo=</textarea>

  <script>
    const xw_docName  = "wdocmain";
    var xw_mapProp  = new Map(); 
    var xw_mapEvent = new Map(); 
    var xw_mapPost  = new Map(); 
    xw_mapProp.set( 'table1', {"lcanfilter":false} );
    function xw_setHbData(element, hbData, value, post = false) {
       if (post) {
          if (xw_mapPost.has(element.id)) {
             xw_mapPost.get(element.id)[hbData.toLowerCase()] = value;
          } else {
             xw_mapPost.set(element.id, {});
             xw_mapPost.get(element.id)[hbData.toLowerCase()] = value;
          }
       } else {
          xw_mapProp.get(element.id)[hbData.toLowerCase()] = value;
       }
    }
    function xw_baseUri() {
       return window.location.href.split('.cgi')[0] + '.cgi';
    }
    function xw_idVisible( cId, lShow ) {
       const ele = document.getElementById(cId);
       if (ele) {
          if (typeof lShow === "undefined") {
             lShow = ele.hidden;
             }
          ele.hidden = !lShow;
       }
    }
    function xw_getCookie(name) {
       let matches = document.cookie.match(new RegExp(
       "(?:^|; )" + name.replace(/([\.$?*|{}\(\)\[\]\\\/\+^])/g, '\\$1') + "=([^;]*)"));
       if (matches) {
          return decodeURIComponent(matches[1]);
       } else {
          console.warn( "Cookie not found: " + name );
          return undefined;
       }
    }
    function xw_setCookie(name, value, options = {}) {
      if (value === undefined) {
        console.warn( "Cookie value undefined: " + name );
        return false;
      }
      if (value.length > 1024) {
        console.warn( "excessive size for cookie: " + name );
        return false;
      }
      if (options.expires instanceof Date) {
        options.expires = options.expires.toUTCString();
      }
      let updatedCookie = encodeURIComponent(name) + "=" + encodeURIComponent(value);
      for (let optionKey in options) {
        updatedCookie += "; " + optionKey;
        let optionValue = options[optionKey];
        if (optionValue !== true) {
          updatedCookie += "=" + optionValue;
        }
      }
      document.cookie = updatedCookie;
      return true;
    }
    function xw_deleteCookie(name) {
       xw_setCookie(name, "", {'max-age': -1});
    }
    function xw_submit(e) {
       let ele = document.getElementById( e.target.name );
       if (ele) {
          xw_setCookie("session", xw_getCookie("session"), {'max-age': 60});
          xw_saveState();
          xw_saveSession();
          xw_savePost(e.target.name);
       }
       return true;
    }
    function xw_saveState() {
       let s = {};
       for (const [id, obj] of xw_mapProp) {
          for(const[key, val] of Object.entries(obj)) {
             const ele = document.getElementById( id );
             const nam = key.substring(1);
             const typ = typeof ele[nam];
             if (typ !== "undefined") {
               if (typ === "string" && ele[nam].length > 512) {
                 obj[key] = null;
               } else {
                 obj[key] = ele[nam];
               }
             }
          }
          s[id] = obj;
       }
       if (Object.keys(s).length > 0) {
          xw_setCookie("state", JSON.stringify(s), {'max-age': 60});
       }
    }
    function xw_saveSession() {
       let s = {};
       for (const [id, obj] of xw_mapProp) {
          let nob = {};
          let ele = document.getElementById(id);
          for(const[key, val] of Object.entries(obj)) {
             if (val == null) {
                nob[key] = ele[key];
             }
          }
          if (Object.keys(nob).length > 0) {
             s[id] = nob;
          }
       }
       if (Object.keys(s).length > 0) {
          sessionStorage.setItem( encodeURIComponent(window.location), JSON.stringify(s) );
       }
       else {
          sessionStorage.removeItem( encodeURIComponent(window.location));
       }
    }
    function xw_savePost(id) {
       if (xw_mapPost.size === 0) {
          return false;
       }
       let form = document.getElementById(id);
       if (form) {
          let input;
          for (const [id, obj] of xw_mapPost) {
             for(const[key, val] of Object.entries(obj)) {
                if (val !== null) {
                   input = document.createElement('input');
                   input.setAttribute('name', id + '--' + key);
                   input.setAttribute('value', val);
                   input.setAttribute('type', 'hidden');
                   form.appendChild(input);
                }
             }
          }
       } else {
          form = document.createElement('form');
          form.method = "POST";
          let input;
          for (const [id, obj] of xw_mapPost) {
             for(const[key, val] of Object.entries(obj)) {
                if (val !== null) {
                   input = document.createElement('input');
                   input.setAttribute('name', id + '@' + key);
                   input.setAttribute('value', val);
                   input.setAttribute('type', 'hidden');
                   form.appendChild(input);
                }
             }
          }
          document.body.appendChild(form);
          form.addEventListener("submit", function(e){e.preventDefault();});
          form.submit();
       }
       return true;
    }
    function xw_stateValue(id, name) {
       return xw_mapProp.get(id)[name];
    }
    function xw_restoreSession() {
       const j = sessionStorage.getItem( encodeURIComponent(window.location) );
       if (j) {
          let s = JSON.parse(j);
          for (const [id, obj] of s) {
             const ele = document.getElementById( id );
             if (ele) {
                for (const[key, val] of Object.entries(obj)) {
                   ele[key] = val;
                }
             }
          }
       }
    }
    async function xw_fetch( targetId, sourceId, cb, url, options ) {
       const el = document.getElementById(targetId);
       const or = document.getElementById(sourceId);
       let tp = options.headers['Content-type'];
       let dt = null;
       let re = null;
       if (cb) {
          try {
             if (typeof eval(cb) !== "function") {
                console.warn(`function ${cb} not found.`);
                return;
             }
          } catch (exception) {
             console.warn(`Function ${cb} not found.`);
             return;
          }
       }
       if (or) {
          or.disabled = true;
       }
       try {
          const pos = url.search("&");
          if (pos > 0 ) {
             let tParams = "";
             url.substring(pos+1).split("&").forEach(token => {
                const tId  = token.split("=")[0];
                const tFld = token.split("=")[1];
                const tEl = document.getElementById(tId);
                if (tEl) {
                   if (tEl.getAttribute(tFld)) {
                      tParams += "&" + tId + "_" + tFld + "=" + tEl[tFld];
                   } else {
                      tParams += "&detail-" + tFld + "=" + tEl.dataset[tFld];
                   }
                }
                });
             url = url.substring(0, pos)+tParams;
             }
          re = await fetch(url, options);
          if (re.ok) {
             if (re.status != 200) {
                tp = "application/javascript";
             }
             try {
                switch(tp) {
                case "application/json":
                   dt = await re.json();
                   break;
                case "text/plain":
                case "application/javascript":
                   dt = await re.text();
                   break;
                case "multipart/form-data":
                case "application/x-www-form-urlencoded":
                   dt = await re.formData();
                   break;
                case "application/octet-stream":
                   dt = await re.blob();
                   break;
                default:
                   dt = await re.text();
                }
             } catch (exception) {
                console.warn(exception);
                dt = null;
             }
          }
       } catch (exception) {
          console.warn(exception);
          re = null;
       }
       if (or) {
          or.disabled = false;
       }
       if (dt) {
          if ( tp === "application/javascript" ) {
             if (re.status === 200) {
                let s = document.createElement('script');
                s.text = dt;
                const node = document.getElementsByTagName('head')[0].appendChild(s);
                node.remove();
             } else {
                console.warn( dt );
             }
          } else {
             if (cb ) {
                eval(cb)(el,dt);
             } else {
               console.warn('Call-back function empty');
             }
          }
       }
    }
    function xw_b64toUnicode(str) {
        return decodeURIComponent(atob(str).split('').map(function(c) {
            return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);
        }).join(''));
    }
    function xw_runAction( element, funcName, ev ) {
       const e = {"id":(element ? element.id : 0),"isTrusted":ev.isTrusted,
                  "altKey":ev.altKey,"ctrlKey":ev.ctrlKey,
                  "clientX":ev.clientX,"clientY":ev.clientY};
       const d = ((element && element.dataset.document) ? element.dataset.document : xw_docName);
       const p = xw_baseUri() + "?action=" + d + "-" + funcName;
       if (ev.detail) {
          for(const[nam, val] of Object.entries(ev.detail)) {
             e["detail-"+nam] = val;
          }
       }
       xw_setCookie("event", JSON.stringify(e), {'max-age': 60});
       xw_setCookie("session", xw_getCookie("session"), {'max-age': 60});
       xw_saveState();
       xw_saveSession();
       xw_savePost();
       window.location = p;
    }
    function xw_processEvent( element, eventName, eventValue ) {
       if (eventValue.startsWith('@')) {
          element.addEventListener(`${eventName}`.substring(2), function(ev) {
             xw_runAction( element, eventValue.substring(1), ev );
          });
       } else {
          try {
             const evName = eventName.substring(2);
             if (typeof eval(`${eventValue}`) === "function") {
                element.addEventListener(`${eventName}`.substring(2), eval(`${eventValue}`));
             }
          } catch (exception) {
             console.warn(exception);
          }
       }
    }
    xw_deleteCookie("event");
    xw_deleteCookie("state");
    for (const [key, obj] of xw_mapEvent) {
       for(const[eve, val] of Object.entries(obj)) {
          const ele = document.getElementById( key );
          if (ele) {
             xw_processEvent( ele, eve, val );
          }
       }
    }
  </script>

  <script>
    ta = document.getElementById("source");
    if (ta) {
       ta.value = xw_b64toUnicode(ta.value);
    }
    delete ta;
  </script>

  <script>
    function sortTableByColumn(table, column, asc = true) {
       const dirModifier = asc ? 1 : -1;
       const tBody = table.tBodies[0];
       const rows = Array.from(tBody.querySelectorAll("tr"));
       const sortedRows = rows.sort((a, b) => {
          const aColText = a.querySelector(`td:nth-child(${column + 1})`).textContent.trim();
          const bColText = b.querySelector(`td:nth-child(${column + 1})`).textContent.trim();
          return aColText > bColText ? (1 * dirModifier) : (-1 * dirModifier);
       });
       while (tBody.firstChild) {
          tBody.removeChild(tBody.firstChild);
       }
       tBody.append(...sortedRows);
       table.querySelectorAll("th").forEach(th => th.classList.remove("th-sort-asc", "th-sort-desc"));
       table.querySelector(`th:nth-child(${column + 1})`).classList.toggle("th-sort-asc", asc);
       table.querySelector(`th:nth-child(${column + 1})`).classList.toggle("th-sort-desc", !asc);
    }
    document.querySelectorAll(".table-sortable th").forEach(headerCell => {
       headerCell.addEventListener("click", () => {
          const tableElement = headerCell.parentElement.parentElement.parentElement;
          const headerIndex = Array.prototype.indexOf.call(headerCell.parentElement.children, headerCell);
          const currentIsAscending = headerCell.classList.contains("th-sort-asc");
          sortTableByColumn(tableElement, headerIndex, !currentIsAscending);
       });
    });
  </script>
</body>
</html>

Execute time in milliseconds:          9