dbg> Query string: action=wdocmain-EventMethod
dbg> Get-Param action:wdocmain-EventMethod
dbg> Get-Cookie session:9493987d2fa15c579e590c2ceae0e159b91c128a
dbg> Get-Cookie event:{"id":"listbox1","isTrusted":true}
dbg> Get-Cookie state:{"listbox1":{"cvalue":"1"},"rowInfo":{"cvalue":""},"table1":{"lcanfilter":false}}
--------------------------------------------------------------------------------
status: 200
Content-type: text/html
Set-Cookie: session=9493987d2fa15c579e590c2ceae0e159b91c128a; Path=/; SameSite=strict; Max-Age=3600
--------------------------------------------------------------------------------
<!DOCTYPE html>

<html lang="en">

<head>
  <title>Tables row click</title>
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <meta http-equiv="Content-type" content="text/html;charset=UTF-8">
  <style>
  #table1 th {
    background-color:var(--border);
    border: none;
    }
  #table1 thead {
    position:sticky;
    inset-block-start: 0;
    }
  #table1 tfoot {
    position:sticky;
    inset-block-end: 0;
    }
  #table1 tr {
    scroll-snap-align: start;
    }
  #table1 td {
    border: none;
    }
  </style>
  <link rel="stylesheet" href="https://unpkg.com/simpledotcss/simple.min.css">

  <style>
    td, th {
      border: none;
      text-align: start;
      padding: .5rem;
      font-size: 0.9rem;
      }
    .table-filterable tr:nth-child(even) {
      background-color: initial;
      }
    .table-filterable tbody tr {
      border-bottom: 1px solid #333333;
      }
    table {
      margin: 0;
      }
  </style>
  <style>
    .table-sortable th {
      cursor: pointer;
      }
    .table-sortable .th-sort-asc::after {
      content: "\25b4";
      }
    .table-sortable .th-sort-desc::after {
      content: "\25be";
      }
    .table-sortable .th-sort-asc::after,
    .table-sortable .th-sort-desc::after {
      margin-left: 5px;
      }
    .table-sortable .th-sort-asc,
    .table-sortable .th-sort-desc {
      background: rgba(0, 0, 0, 0.1);
      }
  </style>
  <style>
    tr[data-recno] {
      cursor: pointer };
  </style>
  <style>
    @media (max-width: 650px) {
      #table1 th {
        display: none;
        }
      #table1 tfoot {
        display: none;
        }
      #table1 td {
        display: grid;
        gap: 0.5rem;
        grid-template-columns: 15ch auto;
        padding: 0.5rem 1rem;
        }
      #table1 td:first-child {
        padding-top: 2rem;
        }
      #table1 td:last-child {
        padding-bottom: 2rem;
        }
      #table1 td::before {
        font-weight: 700;
        text-transformation: capitalize;
        }
      #table1 td:nth-of-type(1)::before {
        content: "Id:";}
      #table1 td:nth-of-type(2)::before {
        content: "First:";}
      #table1 td:nth-of-type(3)::before {
        content: "Last:";}
      #table1 td:nth-of-type(4)::before {
        content: "Street:";}
      #table1 td:nth-of-type(5)::before {
        content: "City:";}
      }
  </style>
</head>
<body style="grid-template-columns: 1fr min(145rem, 90%) 1fr;">
  <h2>Table with row click events</h2>
  <select value="1" id="listbox1" data-document="wdocmain" onchange="@EventMethod"><br>
    <option selected value="1">Resolved in JavaScript</option>
    <option value="2">Resolved in Harbour</option>
    <option value="3">Resolved in Harbour+Fetch (application/json)</option>
    <option value="4">Resolved in Harbour+Fetch (application/javascript)</option>
  </select>
  <span id="rowInfo"><p>Click on any row</p></span>
  </span>
  <div style="height:600px;overflow-y:auto;scroll-snap-type:y mandatory;width:100%;">
    <table id="table1" class="table-sortable table-recno" style="width:100%;" data-document="wdocmain" onrowclick="jsrowClick">
      <thead>
        <tr data-recno ="Id">
          <th>Id</th>
          <th>First</th>
          <th>Last</th>
          <th>Street</th>
          <th>City</th>
        </tr>
      </thead>
      <tbody>
        <tr data-recno ="1">
          <td>1</td>
          <td>ROBIN</td>
          <td>LAFORTUNE</td>
          <td>23974 NORTH REDGUM</td>
          <td>CHOCTAW</td>
        </tr>
        <tr data-recno ="2">
          <td>2</td>
          <td>TARTAGLIA</td>
          <td>DODSON</td>
          <td>18883 SOUTHWEST 12TH AVENUE</td>
          <td>DELTA</td>
        </tr>
        <tr data-recno ="3">
          <td>3</td>
          <td>PETER</td>
          <td>FRITZ</td>
          <td>13645 GROSVENOR HALL</td>
          <td>MESA</td>
        </tr>
        <tr data-recno ="4">
          <td>4</td>
          <td>FRED</td>
          <td>HILTON</td>
          <td>3196 SOUTH BLACKHAWK AVE</td>
          <td>CHATTANOOGA</td>
        </tr>
        <tr data-recno ="5">
          <td>5</td>
          <td>MAJOLA</td>
          <td>MONTANARI</td>
          <td>20481 GRAND AVENUE</td>
          <td>FOUNTAIN VALLEY</td>
        </tr>
        <tr data-recno ="6">
          <td>6</td>
          <td>ARNALDO</td>
          <td>CARNEY</td>
          <td>1692 BUFFALO AVE</td>
          <td>COLUMBUS</td>
        </tr>
        <tr data-recno ="6">
          <td>6</td>
          <td>MARGURETHA</td>
          <td>WOODWARD</td>
          <td>29099 BOX 303</td>
          <td>NORTH ANDOVER</td>
        </tr>
        <tr data-recno ="7">
          <td>7</td>
          <td>LOU</td>
          <td>STUBBS</td>
          <td>23232 BAMBRIDGE STREET</td>
          <td>OTTSVILLE</td>
        </tr>
        <tr data-recno ="8">
          <td>8</td>
          <td>DAVE</td>
          <td>GOTSMAN</td>
          <td>17960 VANDEVEN COURT</td>
          <td>LAVERNE</td>
        </tr>
        <tr data-recno ="9">
          <td>9</td>
          <td>OVED</td>
          <td>IRWIN</td>
          <td>22152 AVON PLACE</td>
          <td>SUNNYVALE</td>
        </tr>
        <tr data-recno ="10">
          <td>10</td>
          <td>BOHDAN</td>
          <td>SAAD</td>
          <td>22528 BEAUREGARD STREET</td>
          <td>SPRINGFIELD</td>
        </tr>
        <tr data-recno ="11">
          <td>11</td>
          <td>ALI</td>
          <td>HAAN</td>
          <td>19830 INDUSTRIAL DRIVE</td>
          <td>SAN FRANCISCO</td>
        </tr>
        <tr data-recno ="12">
          <td>12</td>
          <td>LAM</td>
          <td>BICKLEY</td>
          <td>2283 PIONCIANA</td>
          <td>MONTVILLE</td>
        </tr>
        <tr data-recno ="13">
          <td>13</td>
          <td>VINCENT</td>
          <td>BECKERMAN</td>
          <td>24596 EXCHANGE PLACE</td>
          <td>TORONTO</td>
        </tr>
        <tr data-recno ="14">
          <td>14</td>
          <td>LENORE</td>
          <td>JOCHUM</td>
          <td>143 CANANDAIGUA ROAD</td>
          <td>MONTGOMERY</td>
        </tr>
        <tr data-recno ="15">
          <td>15</td>
          <td>GUNTHER</td>
          <td>BLAKE</td>
          <td>21339 CLARKS HILL</td>
          <td>LAKELAND</td>
        </tr>
        <tr data-recno ="16">
          <td>16</td>
          <td>ARTHUR</td>
          <td>QUINN</td>
          <td>21900 BOXWOOD LANE</td>
          <td>LAFAYETTE</td>
        </tr>
        <tr data-recno ="17">
          <td>17</td>
          <td>LUCIAN</td>
          <td>KELLEY</td>
          <td>23633 SW MARTIN DOWNS BLVD</td>
          <td>FORT MILL</td>
        </tr>
        <tr data-recno ="18">
          <td>18</td>
          <td>BECKY</td>
          <td>COLEMAN</td>
          <td>29884 NORTH WEST 66TH ST</td>
          <td>ANN ARBOR</td>
        </tr>
        <tr data-recno ="19">
          <td>19</td>
          <td>REG</td>
          <td>HONG</td>
          <td>1010 MELROSE AVENUE</td>
          <td>LISLE</td>
        </tr>
        <tr data-recno ="20">
          <td>20</td>
          <td>LANCE</td>
          <td>THOMSON</td>
          <td>2740 LAWRENCE AVE WEST</td>
          <td>VACAVILLE</td>
        </tr>
        <tr data-recno ="21">
          <td>21</td>
          <td>DARRELL</td>
          <td>HUSSAIN</td>
          <td>1875 WHIPPLE AVE NW</td>
          <td>BELTSVILLE</td>
        </tr>
        <tr data-recno ="22">
          <td>22</td>
          <td>WESLEY</td>
          <td>GOTSMAL</td>
          <td>29583 E LINCOLN</td>
          <td>JERSEY CITY</td>
        </tr>
        <tr data-recno ="23">
          <td>23</td>
          <td>FRANK</td>
          <td>DEARRY</td>
          <td>22530 FOREST DRIVE</td>
          <td>WOODBRIDGE</td>
        </tr>
        <tr data-recno ="24">
          <td>24</td>
          <td>PHILIPPE</td>
          <td>PEZZANI</td>
          <td>29933 LAURIE LANE</td>
          <td>BALTIMORE</td>
        </tr>
        <tr data-recno ="25">
          <td>25</td>
          <td>RANDALL</td>
          <td>BREMAN</td>
          <td>8369 SOKOLOV STREET</td>
          <td>SOUTH ELGIN</td>
        </tr>
        <tr data-recno ="26">
          <td>26</td>
          <td>TROY</td>
          <td>CAIN</td>
          <td>17976 UNIVERSITY AVENUE</td>
          <td>SPRINGFIELD</td>
        </tr>
        <tr data-recno ="27">
          <td>27</td>
          <td>BERNHARD</td>
          <td>HALEY</td>
          <td>29203 CARMENITA ROAD</td>
          <td>TALLAHASSE</td>
        </tr>
        <tr data-recno ="28">
          <td>28</td>
          <td>BRUNO</td>
          <td>WILSON</td>
          <td>11047 KNOLLSIDE LANE</td>
          <td>VICTORIA</td>
        </tr>
        <tr data-recno ="29">
          <td>29</td>
          <td>SUZANNE</td>
          <td>GALVEZ</td>
          <td>31751 FOCHT AVENUE</td>
          <td>LAKELAND</td>
        </tr>
        <tr data-recno ="30">
          <td>30</td>
          <td>NICK</td>
          <td>JONES</td>
          <td>9349 BELLMORE</td>
          <td>ALLENTOWN</td>
        </tr>
        <tr data-recno ="31">
          <td>31</td>
          <td>TREVOR</td>
          <td>RUSSEL</td>
          <td>30453 CAROLINA AVENUE</td>
          <td>STEVENS POINT</td>
        </tr>
        <tr data-recno ="32">
          <td>32</td>
          <td>BEHZAD</td>
          <td>STOOPS</td>
          <td>31540 HUNNEWELL STREET</td>
          <td>GLENDALE</td>
        </tr>
        <tr data-recno ="33">
          <td>33</td>
          <td>CLESSON</td>
          <td>FISHER</td>
          <td>8567 SHERMAN WAY</td>
          <td>LAVERNE</td>
        </tr>
        <tr data-recno ="34">
          <td>34</td>
          <td>LENORE</td>
          <td>COTTERILL</td>
          <td>10605 SOUTH UNIVERSITY</td>
          <td>ORLAND PARK</td>
        </tr>
        <tr data-recno ="35">
          <td>35</td>
          <td>BYRON</td>
          <td>DOWD</td>
          <td>30266 RENE LEVESQUE WEST</td>
          <td>FORT COLLINS</td>
        </tr>
        <tr data-recno ="36">
          <td>36</td>
          <td>DAVID</td>
          <td>ZEAL</td>
          <td>26187 COHEN STREET</td>
          <td>CHATTANOOGA</td>
        </tr>
        <tr data-recno ="37">
          <td>37</td>
          <td>JACKIE</td>
          <td>BECKERMAN</td>
          <td>32292 DEVONSHIRA DRIVE</td>
          <td>ORANGE</td>
        </tr>
      </tbody>
    </table>
  </div>
  <hr>
  <textarea rows="40" cols="100" readonly id="source"></textarea>

  <script>
    function jsrowClick(event) {
       const ele = document.getElementById( "rowInfo" );
       if (ele) {
          ele.innerHTML = "<p>Recno: " + event.detail.recno + " (resolved in Javascript)</p>"
       }
    }
    function fetchDataRowClick(element, par) {
       const ele = document.getElementById( "rowInfo" );
       if (ele) {
          ele.innerHTML = "<p>Recno: " + par['detail-recno'] + " (resolved in Harbour with Fetch API)</p>"
       }
    }
  </script>

  <script>
    const xw_docName  = "wdocmain";
    var xw_mapProp  = new Map(); 
    var xw_mapEvent = new Map(); 
    var xw_mapPost  = new Map(); 
    xw_mapProp.set( 'listbox1', {"cvalue":"1"} );
    xw_mapProp.set( 'rowInfo', {"cvalue":""} );
    xw_mapProp.set( 'table1', {"lcanfilter":false} );
    xw_mapEvent.set( 'listbox1', {"onchange":"@EventMethod"} );
    xw_mapEvent.set( 'table1', {"onrowclick":"jsrowClick"} );
    function xw_setHbData(element, hbData, value, post = false) {
       if (post) {
          if (xw_mapPost.has(element.id)) {
             xw_mapPost.get(element.id)[hbData.toLowerCase()] = value;
          } else {
             xw_mapPost.set(element.id, {});
             xw_mapPost.get(element.id)[hbData.toLowerCase()] = value;
          }
       } else {
          xw_mapProp.get(element.id)[hbData.toLowerCase()] = value;
       }
    }
    function xw_baseUri() {
       return window.location.href.split('.cgi')[0] + '.cgi';
    }
    function xw_idVisible( cId, lShow ) {
       const ele = document.getElementById(cId);
       if (ele) {
          if (typeof lShow === "undefined") {
             lShow = ele.hidden;
             }
          ele.hidden = !lShow;
       }
    }
    function xw_getCookie(name) {
       let matches = document.cookie.match(new RegExp(
       "(?:^|; )" + name.replace(/([\.$?*|{}\(\)\[\]\\\/\+^])/g, '\\$1') + "=([^;]*)"));
       if (matches) {
          return decodeURIComponent(matches[1]);
       } else {
          console.warn( "Cookie not found: " + name );
          return undefined;
       }
    }
    function xw_setCookie(name, value, options = {}) {
      if (value === undefined) {
        console.warn( "Cookie value undefined: " + name );
        return false;
      }
      if (value.length > 1024) {
        console.warn( "excessive size for cookie: " + name );
        return false;
      }
      if (options.expires instanceof Date) {
        options.expires = options.expires.toUTCString();
      }
      let updatedCookie = encodeURIComponent(name) + "=" + encodeURIComponent(value);
      for (let optionKey in options) {
        updatedCookie += "; " + optionKey;
        let optionValue = options[optionKey];
        if (optionValue !== true) {
          updatedCookie += "=" + optionValue;
        }
      }
      document.cookie = updatedCookie;
      return true;
    }
    function xw_deleteCookie(name) {
       xw_setCookie(name, "", {'max-age': -1});
    }
    function xw_submit(e) {
       let ele = document.getElementById( e.target.name );
       if (ele) {
          xw_setCookie("session", xw_getCookie("session"), {'max-age': 60});
          xw_saveState();
          xw_saveSession();
          xw_savePost(e.target.name);
       }
       return true;
    }
    function xw_saveState() {
       let s = {};
       for (const [id, obj] of xw_mapProp) {
          for(const[key, val] of Object.entries(obj)) {
             const ele = document.getElementById( id );
             const nam = key.substring(1);
             const typ = typeof ele[nam];
             if (typ !== "undefined") {
               if (typ === "string" && ele[nam].length > 512) {
                 obj[key] = null;
               } else {
                 obj[key] = ele[nam];
               }
             }
          }
          s[id] = obj;
       }
       if (Object.keys(s).length > 0) {
          xw_setCookie("state", JSON.stringify(s), {'max-age': 60});
       }
    }
    function xw_saveSession() {
       let s = {};
       for (const [id, obj] of xw_mapProp) {
          let nob = {};
          let ele = document.getElementById(id);
          for(const[key, val] of Object.entries(obj)) {
             if (val == null) {
                nob[key] = ele[key];
             }
          }
          if (Object.keys(nob).length > 0) {
             s[id] = nob;
          }
       }
       if (Object.keys(s).length > 0) {
          sessionStorage.setItem( encodeURIComponent(window.location), JSON.stringify(s) );
       }
       else {
          sessionStorage.removeItem( encodeURIComponent(window.location));
       }
    }
    function xw_savePost(id) {
       if (xw_mapPost.size === 0) {
          return false;
       }
       let form = document.getElementById(id);
       if (form) {
          let input;
          for (const [id, obj] of xw_mapPost) {
             for(const[key, val] of Object.entries(obj)) {
                if (val !== null) {
                   input = document.createElement('input');
                   input.setAttribute('name', id + '--' + key);
                   input.setAttribute('value', val);
                   input.setAttribute('type', 'hidden');
                   form.appendChild(input);
                }
             }
          }
       } else {
          form = document.createElement('form');
          form.method = "POST";
          let input;
          for (const [id, obj] of xw_mapPost) {
             for(const[key, val] of Object.entries(obj)) {
                if (val !== null) {
                   input = document.createElement('input');
                   input.setAttribute('name', id + '@' + key);
                   input.setAttribute('value', val);
                   input.setAttribute('type', 'hidden');
                   form.appendChild(input);
                }
             }
          }
          document.body.appendChild(form);
          form.addEventListener("submit", function(e){e.preventDefault();});
          form.submit();
       }
       return true;
    }
    function xw_stateValue(id, name) {
       return xw_mapProp.get(id)[name];
    }
    function xw_restoreSession() {
       const j = sessionStorage.getItem( encodeURIComponent(window.location) );
       if (j) {
          let s = JSON.parse(j);
          for (const [id, obj] of s) {
             const ele = document.getElementById( id );
             if (ele) {
                for (const[key, val] of Object.entries(obj)) {
                   ele[key] = val;
                }
             }
          }
       }
    }
    async function xw_fetch( targetId, sourceId, cb, url, options ) {
       const el = document.getElementById(targetId);
       const or = document.getElementById(sourceId);
       let tp = options.headers['Content-type'];
       let dt = null;
       let re = null;
       if (cb) {
          try {
             if (typeof eval(cb) !== "function") {
                console.warn(`function ${cb} not found.`);
                return;
             }
          } catch (exception) {
             console.warn(`Function ${cb} not found.`);
             return;
          }
       }
       if (or) {
          or.disabled = true;
       }
       try {
          const pos = url.search("&");
          if (pos > 0 ) {
             let tParams = "";
             url.substring(pos+1).split("&").forEach(token => {
                const tId  = token.split("=")[0];
                const tFld = token.split("=")[1];
                const tEl = document.getElementById(tId);
                if (tEl) {
                   if (tEl.getAttribute(tFld)) {
                      tParams += "&" + tId + "_" + tFld + "=" + tEl[tFld];
                   } else {
                      tParams += "&detail-" + tFld + "=" + tEl.dataset[tFld];
                   }
                }
                });
             url = url.substring(0, pos)+tParams;
             }
          re = await fetch(url, options);
          if (re.ok) {
             if (re.status != 200) {
                tp = "application/javascript";
             }
             try {
                switch(tp) {
                case "application/json":
                   dt = await re.json();
                   break;
                case "text/plain":
                case "application/javascript":
                   dt = await re.text();
                   break;
                case "multipart/form-data":
                case "application/x-www-form-urlencoded":
                   dt = await re.formData();
                   break;
                case "application/octet-stream":
                   dt = await re.blob();
                   break;
                default:
                   dt = await re.text();
                }
             } catch (exception) {
                console.warn(exception);
                dt = null;
             }
          }
       } catch (exception) {
          console.warn(exception);
          re = null;
       }
       if (or) {
          or.disabled = false;
       }
       if (dt) {
          if ( tp === "application/javascript" ) {
             if (re.status === 200) {
                let s = document.createElement('script');
                s.text = dt;
                const node = document.getElementsByTagName('head')[0].appendChild(s);
                node.remove();
             } else {
                console.warn( dt );
             }
          } else {
             if (cb ) {
                eval(cb)(el,dt);
             } else {
               console.warn('Call-back function empty');
             }
          }
       }
    }
    function xw_b64toUnicode(str) {
        return decodeURIComponent(atob(str).split('').map(function(c) {
            return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);
        }).join(''));
    }
    function xw_runAction( element, funcName, ev ) {
       const e = {"id":(element ? element.id : 0),"isTrusted":ev.isTrusted,
                  "altKey":ev.altKey,"ctrlKey":ev.ctrlKey,
                  "clientX":ev.clientX,"clientY":ev.clientY};
       const d = ((element && element.dataset.document) ? element.dataset.document : xw_docName);
       const p = xw_baseUri() + "?action=" + d + "-" + funcName;
       if (ev.detail) {
          for(const[nam, val] of Object.entries(ev.detail)) {
             e["detail-"+nam] = val;
          }
       }
       xw_setCookie("event", JSON.stringify(e), {'max-age': 60});
       xw_setCookie("session", xw_getCookie("session"), {'max-age': 60});
       xw_saveState();
       xw_saveSession();
       xw_savePost();
       window.location = p;
    }
    function xw_processEvent( element, eventName, eventValue ) {
       if (eventValue.startsWith('@')) {
          element.addEventListener(`${eventName}`.substring(2), function(ev) {
             xw_runAction( element, eventValue.substring(1), ev );
          });
       } else {
          try {
             const evName = eventName.substring(2);
             if (typeof eval(`${eventValue}`) === "function") {
                element.addEventListener(`${eventName}`.substring(2), eval(`${eventValue}`));
             }
          } catch (exception) {
             console.warn(exception);
          }
       }
    }
    xw_deleteCookie("event");
    xw_deleteCookie("state");
    for (const [key, obj] of xw_mapEvent) {
       for(const[eve, val] of Object.entries(obj)) {
          const ele = document.getElementById( key );
          if (ele) {
             xw_processEvent( ele, eve, val );
          }
       }
    }
  </script>

  <script>
    ta = document.getElementById("source");
    if (ta) {
       ta.value = xw_b64toUnicode(ta.value);
    }
    delete ta;
  </script>

  <script>
    function sortTableByColumn(table, column, asc = true) {
       const dirModifier = asc ? 1 : -1;
       const tBody = table.tBodies[0];
       const rows = Array.from(tBody.querySelectorAll("tr"));
       const sortedRows = rows.sort((a, b) => {
          const aColText = a.querySelector(`td:nth-child(${column + 1})`).textContent.trim();
          const bColText = b.querySelector(`td:nth-child(${column + 1})`).textContent.trim();
          return aColText > bColText ? (1 * dirModifier) : (-1 * dirModifier);
       });
       while (tBody.firstChild) {
          tBody.removeChild(tBody.firstChild);
       }
       tBody.append(...sortedRows);
       table.querySelectorAll("th").forEach(th => th.classList.remove("th-sort-asc", "th-sort-desc"));
       table.querySelector(`th:nth-child(${column + 1})`).classList.toggle("th-sort-asc", asc);
       table.querySelector(`th:nth-child(${column + 1})`).classList.toggle("th-sort-desc", !asc);
    }
    document.querySelectorAll(".table-sortable th").forEach(headerCell => {
       headerCell.addEventListener("click", () => {
          const tableElement = headerCell.parentElement.parentElement.parentElement;
          const headerIndex = Array.prototype.indexOf.call(headerCell.parentElement.children, headerCell);
          const currentIsAscending = headerCell.classList.contains("th-sort-asc");
          sortTableByColumn(tableElement, headerIndex, !currentIsAscending);
       });
    });
  </script>

  <script>
    document.querySelectorAll(".table-recno tbody").forEach(tbody => {
       tbody.addEventListener("click", function(e) {
          const row = e.target.parentElement;
          if (row.matches("tr")) {
             const table = row.parentElement.parentElement;
             const cells = [];
             Array.from(row.children).forEach((td) => {
                cells.push(td.textContent);
             });
             const evValue = table.getAttribute( "onrowclick" );
             if (evValue.startsWith('xw_fetch')) {
                table.dataset.recno = row.dataset.recno;
                table.dataset.fields = cells;
                eval(`${evValue}`);
             } else {
                table.dispatchEvent(new CustomEvent("rowclick",{
                   detail: { recno: row.dataset.recno, fields: cells}
                   }));
             }
          }
       });
    });
  </script>
</body>
</html>
